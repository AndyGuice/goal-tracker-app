{"version":3,"sources":["constants/actionTypes.ts","reducers/auth.ts","reducers/error.ts","reducers/index.ts","reducers/forms.ts","reducers/goals.ts","reducers/answers.ts","components/Navbar/styles.ts","components/Navbar/Navbar.tsx","components/App/Layout/index.tsx","api/index.ts","components/Helpers/GoogleIcon.tsx","components/Auth/styles.ts","components/Helpers/Input.tsx","components/Helpers/Alert.tsx","components/Auth/LoginUser.tsx","actions/auth.ts","components/Unauthorized/Unauthorized.tsx","components/Auth/RegisterUser.tsx","components/Forms/styles.ts","actions/forms.ts","components/Forms/Form.tsx","components/Forms/Forms.tsx","components/Forms/AddForm/styles.ts","constants/questionTypes.tsx","components/Helpers/LinearScale/LinearScaleQuestion.tsx","components/Helpers/MultipleChoice/MultipleChoiceQuestion.tsx","components/Helpers/SingleChoice/SingleChoiceQuestion.tsx","components/Helpers/LongText/LongTextQuestion.tsx","components/Helpers/ShortText/ShortTextQuestion.tsx","components/Forms/Section.tsx","models/form.ts","models/section.ts","models/singleMultiDetails.ts","models/linearDetails.ts","components/Forms/AddForm/AddForm.tsx","components/Forms/EditForm/styles.ts","components/Forms/EditForm/EditForm.tsx","models/answer.ts","models/formAnswer.ts","components/Helpers/LinearScale/LinearScaleAnswer.tsx","components/Helpers/LongText/LongTextAnswer.tsx","components/Helpers/MultipleChoice/MultipleChoiceAnswer.tsx","components/Helpers/ShortText/ShortTextAnswer.tsx","components/Helpers/SingleChoice/SingleChoiceAnswer.tsx","components/Forms/AnswerForm/styles.ts","components/Forms/AnswerForm/AnswerForm.tsx","actions/answer.ts","components/Forms/ShowAnswers/styles.ts","components/Forms/ShowAnswers/ShowAnswers.tsx","models/goal.ts","components/Goals/AddGoal/styles.ts","components/Goals/AddGoal/AddGoal.tsx","actions/goals.ts","components/Goals/EditGoal/styles.ts","components/Goals/EditGoal/EditGoal.tsx","components/Dashboard/Dashboard.tsx","components/Goals/styles.ts","components/Goals/Goal.tsx","components/Goals/Goals.tsx","components/Router/Router.tsx","components/App/App.tsx","index.tsx"],"names":["START_LOADING","END_LOADING","ERROR","authReducer","state","authData","action","type","localStorage","setItem","JSON","stringify","data","loading","errors","clear","errorReducer","error","actionType","reducers","combineReducers","auth","forms","isLoading","payload","form","updateSuccessful","movies","filter","_id","deleteSuccessful","goals","goal","answers","addAnswerSuccessful","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","logout","marginLeft","userName","display","alignItems","textAlign","purple","color","palette","getContrastText","deepPurple","backgroundColor","Navbar","classes","useStyles","history","useHistory","location","useLocation","profile","getItem","useState","parse","user","setUser","dispatch","useDispatch","push","useEffect","token","decode","exp","Date","getTime","className","style","position","left","top","AppBar","Toolbar","Typography","variant","align","to","textDecoration","result","Avatar","alt","name","src","imageUrl","charAt","Button","onClick","border","Layout","props","children","API","axios","create","baseURL","interceptors","request","use","req","headers","Authorization","response","status","window","assign","alert","signIn","formData","post","signUp","fetchGoal","id","get","createGoal","deleteGoal","delete","fetchForm","createForm","deleteForm","getAnswers","formId","addAnswer","formAnswer","icon","width","height","viewBox","fill","d","paper","marginTop","flexDirection","padding","margin","avatar","primary","main","submit","googleButton","marginBottom","Input","handleChange","label","half","autoFocus","handleShowPassword","Grid","item","xs","sm","TextField","onChange","fullWidth","InputProps","endAdornment","InputAdornment","IconButton","Alert","elevation","initialState","firstName","lastName","email","password","confirmPassword","LoginUser","useSelector","setForm","showPassword","setShowPassword","React","showError","setShowError","handleClose","event","reason","googleSuccess","res","a","profileObj","tokenId","console","log","e","target","value","Container","component","maxWidth","Paper","onSubmit","router","preventDefault","api","container","clientId","render","renderProps","disabled","startIcon","GoogleIcon","onSuccess","onFailure","cookiePolicy","justify","Snackbar","open","autoHideDuration","onClose","severity","Unauthorized","RegisterUser","EmailValidator","loadingPaper","justifyContent","borderRadius","fontSize","getForm","Form","loggedUser","answersNumber","setAnswerNumbers","obj","length","fetchAnswers","md","lg","Card","raised","CardContent","gutterBottom","noWrap","description","sections","CardActions","aria-label","Object","keys","userId","Forms","showEditSuccess","setShowEditSuccess","showDeleteSuccess","setShowDeleteSuccess","showAddAnswerSuccess","setShowAddAnswerSuccess","handleCloseEditSuccess","handleCloseDeleteSuccess","handleCloseAddAnswerSuccess","CircularProgress","size","Grow","in","timeout","enter","map","index","key","underline","borderBottom","underlineLinear","typographyLinear","paddingTop","singleChoiceOption","cursor","singleChoiceButtonsContainer","singleChoiceOptionMargin","formControl","minWidth","selectEmpty","QuestionHelper","SHORT_TEXT","text","LONG_TEXT","SINGLE_CHOICE","MULTIPLE_CHOICE","LINEAR_SCALE","LinearScaleQuestion","handleLinearScale","section","min","setMin","max","setMax","minEtiquette","setMinEtiquette","maxEtiquette","setMaxEtiquette","linearDetails","minText","maxText","details","trim","i","FormControl","Select","MenuItem","placeholder","startAdornment","RadioGroup","row","defaultValue","options","FormControlLabel","control","Radio","labelPlacement","getScale","option","MultipleChoiceQuestion","handleOptions","handleOtherOption","setOptions","customOptionVisible","setCustomOptionVisible","sectionOptions","singleMultiDetails","deleteIcon","otherOption","deleteOption","newOptions","splice","values","element","Tooltip","placement","counter","SingleChoiceQuestion","LongTextQuestion","ShortTextQuestion","Section","removeSection","handleRequired","sectionNumber","handleDrag","handleDrop","required","setRequired","draggable","onDragOver","ev","onDragStart","onDrop","questionText","InputLabel","labelId","questionType","MenuProps","anchorOrigin","vertical","horizontal","getContentAnchorEl","ButtonGroup","orientation","Divider","FormGroup","checked","Switch","order","this","SingleMultiDetails","LinearDetails","AddForm","dragId","setDragId","sectionsNumber","setSectionsNumber","formTitle","setFormTitle","formDescription","setFormDescription","SectionModel","setSections","inputType","newSections","isOtherOption","currentTarget","dragSection","find","dropSection","dragSectionOrder","dropSectionOrder","newSectionState","validateForm","ok","FormModel","sectionObj","formResult","inputProps","sort","b","EditForm","useParams","updatedForm","patch","updateForm","Answer","singleOption","multiOptions","linearOption","FormAnswer","nick","LinearScaleAnswer","handleLinearOption","setValue","LongTextAnswer","handleTextChange","MultipleChoiceAnswer","handleMultipleOptions","FormLabel","Checkbox","ShortTextAnswer","SingleChoiceAnswer","handleSingleOption","selectedValue","setSelectedValue","setOtherOption","setOption","AnswerForm","setNick","setFormAnswer","newFormAnswer","answer","getOwnPropertyNames","prop","fontWeight","heading","typography","pxToRem","fontWeightRegular","table","ShowAnswers","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","join","getCorrectAnswer","Goal","cadence","complete","AddGoal","goalTitle","setGoalTitle","goalDescription","setGoalDescription","goalCadence","setGoalCadence","goalComplete","setGoalComplete","validateGoal","googleId","GoalModel","goalResult","EditGoal","getGoal","updatedGoal","updateGoal","Dashboard","goalUserID","userID","Goals","getUserGoals","Router","path","exact","createTheme","secondary","warning","App","ThemeProvider","store","createStore","compose","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0d415ba5.chunk.js","sourcesContent":["export const FETCH_ALL = 'FETCH_ALL';\nexport const FETCH_FORM = 'FETCH_FORM';\nexport const FETCH_GOAL = 'FETCH_GOAL';\nexport const FETCH_GOALS = 'FETCH_GOALS';\nexport const START_LOADING = 'START_LOADING';\nexport const END_LOADING = 'END_LOADING';\nexport const ERROR = 'ERROR';\nexport const CREATE = 'CREATE';\nexport const UPDATE = 'UPDATE';\nexport const UPDATE_SUCCESSFUL = 'UPDATE_SUCCESSFUL';\nexport const DELETE = 'DELETE';\nexport const DELETE_SUCCESSFUL = 'DELETE_SUCCESSFUL';\n\nexport const ADD_ANSWER_SUCCESSFUL = 'ADD_ANSWER_SUCCESSFUL';\nexport const GET_ANSWERS = 'GET_ANSWERS';\n\nexport const AUTH = 'AUTH';\nexport const LOGOUT = 'LOGOUT';\n\n","import * as actionType from '../constants/actionTypes';\n\n\nconst authReducer = (state = { authData: null }, action : any) => {\n  switch (action.type) {\n    case actionType.AUTH:\n      localStorage.setItem('profile', JSON.stringify({ ...action?.data }));\n\n      return { ...state, authData: action?.data, loading: false, errors: null };\n    case actionType.LOGOUT:\n      localStorage.clear();\n\n      return { ...state, authData: null, loading: false, errors: null };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import * as actionType from '../constants/actionTypes';\n\n\nconst errorReducer = (state = { error: null }, action: any) => {\n    switch (action.type) {\n        case actionType.ERROR:\n            return { ...state, error: action?.data?.error };\n        default:\n            return state;\n    }\n};\n\nexport default errorReducer;\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport forms from './forms';\nimport goals from './goals';\nimport answers from './answers';\nimport error from './error';\n\nexport const reducers = combineReducers({ auth, forms, goals, answers, error });\n","import { START_LOADING, END_LOADING, FETCH_ALL, FETCH_FORM, CREATE, UPDATE, DELETE, DELETE_SUCCESSFUL, UPDATE_SUCCESSFUL } from '../constants/actionTypes';\n\nexport default (state = { isLoading: true, forms: [] }, action: any) => {\n    switch (action.type) {\n        case START_LOADING:\n            return { ...state, isLoading: true };\n        case END_LOADING:\n            return { ...state, isLoading: false };\n        case FETCH_ALL:\n            return {\n                ...state,\n                forms: action.payload.data,\n            };\n        case FETCH_FORM:\n            return { ...state, form: action.payload.form };\n        case CREATE:\n            return { ...state, forms: [...state.forms, action.payload] };\n        case UPDATE_SUCCESSFUL:\n            return { ...state, updateSuccessful: action?.payload };\n        case DELETE:\n            return { ...state, movies: state.forms.filter((form) => form._id !== action.payload) };\n        case DELETE_SUCCESSFUL:\n            return { ...state, deleteSuccessful: action?.payload };\n        default:\n            return state;\n    }\n}","import {\n  START_LOADING,\n  END_LOADING,\n  FETCH_ALL,\n  FETCH_GOAL,\n  FETCH_GOALS,\n  CREATE,\n  // UPDATE,\n  DELETE,\n  DELETE_SUCCESSFUL,\n  UPDATE_SUCCESSFUL\n} from '../constants/actionTypes';\n\nexport default (state = { isLoading: true, goals: [] }, action: any) => {\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case END_LOADING:\n      return {\n        ...state,\n        isLoading: false\n      };\n    case FETCH_ALL:\n      return {\n        ...state,\n        goals: action.payload.data,\n      };\n    case FETCH_GOALS:\n      return {\n        ...state,\n        goals: action.payload.data,\n      };\n    case FETCH_GOAL:\n      return {\n        ...state,\n        goal: action.payload.goal\n      };\n    case CREATE:\n      return {\n        ...state,\n        goals: [...state.goals, action.payload]\n      };\n    case UPDATE_SUCCESSFUL:\n      return {\n        ...state,\n        updateSuccessful: action?.payload\n      };\n    case DELETE:\n      return {\n        ...state,\n        movies: state.goals.filter((goal) => goal._id !== action.payload)\n      };\n    case DELETE_SUCCESSFUL:\n      return {\n        ...state,\n        deleteSuccessful: action?.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { ADD_ANSWER_SUCCESSFUL, GET_ANSWERS } from '../constants/actionTypes';\n\nexport default (state = [], action: any) => {\n    switch (action.type) {\n        case GET_ANSWERS:\n            return { ...state, answers: action.payload };\n        case ADD_ANSWER_SUCCESSFUL:\n            return { ...state, addAnswerSuccessful: action?.payload };\n        default:\n            return state;\n    }\n}","import { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport { deepPurple } from '@material-ui/core/colors';\n\nexport default makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n        logout: {\n            marginLeft: '20px',\n        },\n        userName: {\n            display: 'flex',\n            alignItems: 'center',\n            textAlign: 'center',\n        },\n        purple: {\n            color: theme.palette.getContrastText(deepPurple[500]),\n            backgroundColor: deepPurple[500],\n            marginRight: '20px'\n        },\n    }),\n);\n","import React, { useEffect, useState } from \"react\";\nimport useStyles from './styles';\nimport { AppBar, Button, Toolbar, Typography } from \"@material-ui/core\";\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport * as actionType from '../../constants/actionTypes';\nimport decode from 'jwt-decode';\nimport { Avatar } from \"@material-ui/core\";\n\nconst Navbar = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const location = useLocation();\n    const handleLogin = () => history.push('/loginUser');\n    const profile = localStorage.getItem('profile')!;\n    const [user, setUser] = useState(JSON.parse(profile));\n    const dispatch = useDispatch();\n\n    const logout = () => {\n        dispatch({ type: actionType.LOGOUT });\n        history.push('/');\n        setUser(null);\n    };\n\n    useEffect(() => {\n        const token = user?.token;\n\n        if (token) {\n            const decodedToken = decode<any>(token);\n            if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n        }\n\n        setUser(JSON.parse(profile));\n    }, [location]);\n\n\n    return (\n        <div className={classes.root} style={{ position: \"absolute\", left: \"0\", top: \"0\" }}>\n            <AppBar color=\"primary\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title} align=\"left\">\n                        <Link\n                            to=\"/\"\n                            style={{ textDecoration: \"none\", color: \"#fff\" }}\n                        >\n                            Goal Tracker\n                        </Link>\n                    </Typography>\n                    {user?.result ?\n                        <div style={{ display: \"flex\" }}>\n                            <Avatar\n                                className={classes.purple}\n                                alt={user?.result.name}\n                                src={user?.result.imageUrl}\n                            >\n                                {user?.result.name.charAt(0)}\n                            </Avatar>\n                            <Typography\n                                className={classes.userName}\n                                variant=\"h6\"\n                            >\n                                {user?.result.name}\n                            </Typography>\n                            <Button\n                                variant=\"contained\"\n                                style={{ marginLeft: \"20px\" }}\n                                color=\"secondary\"\n                                onClick={logout}\n                            >\n                                Logout\n                            </Button>\n                        </div>\n                        :\n                        <Button\n                            color=\"primary\"\n                            style={{ border: \"1px solid black\", backgroundColor: \"#FFF\" }}\n                            onClick={handleLogin}\n                        >\n                            Sign In\n                        </Button>\n                    }\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default Navbar;","import React from 'react';\nimport Navbar from '../../Navbar/Navbar';\n\nconst Layout = (props) => {\n  const { children } = props;\n\n  return (\n    <>\n      <Navbar />\n      {children}\n    </>\n\n  );\n};\n\nexport default Layout;\n","import axios from 'axios';\n\nconst API = axios.create({ baseURL: 'http://localhost:5000' });\nAPI.interceptors.request.use((req) => {\n    if (localStorage.getItem('profile')) {\n        const profile = localStorage.getItem('profile') || '';\n        req.headers.Authorization = `Bearer ${JSON.parse(profile).token}`;\n    }\n\n    return req;\n});\n\n\nAPI.interceptors.response.use(response => {\n    return response;\n}, error => {\n    if (error.response.status === 401) {\n        window.location.assign('/loginUser');\n    }\n    else if (error.response.status === 500) {\n        alert(\"Server error\");\n    }\n    return error;\n\n});\n\n// auth\nexport const signIn = (formData: any) => API.post('/user/signin', formData);\nexport const signUp = (formData: any) => API.post('/user/signup', formData);\n\n\n// CRUD for goals - still to be built out\nexport const fetchAllGoals = () => API.get('/goals');\nexport const fetchUserGoals = (id: String) => API.get(`/goals/users/${id}`);\nexport const fetchGoal = (id: String) => API.get(`/goals/${id}`);\nexport const createGoal = (goal: any) => API.post('/goals', goal);\nexport const updateGoal = (id: String, updatedGoal: any) => API.patch(`/goals/${id}`, updatedGoal);\nexport const deleteGoal = (id: String) => API.delete(`/goals/${id}`);\n\n// forms - to be removed\nexport const fetchForms = () => API.get('/forms');\nexport const fetchForm = (id: String) => API.get(`/forms/${id}`);\nexport const createForm = (form: any) => API.post('/forms', form);\nexport const updateForm = (id: String, updatedForm: any) => API.patch(`/forms/${id}`, updatedForm);\nexport const deleteForm = (id: String) => API.delete(`/forms/${id}`);\n\nexport const getAnswers = (formId: String) => API.get(`/answers/${formId}`);\nexport const addAnswer = (formAnswer: any) => API.post(`/answers/${formAnswer.formId}`, { formAnswer });\n","import React from 'react';\n\nconst icon = () => (\n  <svg style={{ width: '20px', height: '20px' }} viewBox=\"0 0 24 24\">\n    <path\n      fill=\"currentColor\"\n      d=\"M21.35,11.1H12.18V13.83H18.69C18.36,17.64 15.19,19.27 12.19,19.27C8.36,19.27 5,16.25 5,12C5,7.9 8.2,4.73 12.2,4.73C15.29,4.73 17.1,6.7 17.1,6.7L19,4.72C19,4.72 16.56,2 12.1,2C6.42,2 2.03,6.8 2.03,12C2.03,17.05 6.16,22 12.25,22C17.6,22 21.5,18.33 21.5,12.91C21.5,11.76 21.35,11.1 21.35,11.1V11.1Z\"\n    />\n  </svg>\n);\n\nexport default icon;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  googleButton: {\n    marginBottom: theme.spacing(2),\n  },\n  alert: {\n    backgroundColor: '#f50057',\n  }\n}));\n","import React from 'react';\nimport { TextField, Grid, InputAdornment, IconButton } from '@material-ui/core';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst Input = ({ name, handleChange, label, half, autoFocus, type, handleShowPassword } : any) => (\n  <Grid item xs={12} sm={half ? 6 : 12}>\n    <TextField\n      color=\"primary\"\n      name={name}\n      onChange={handleChange}\n      variant=\"outlined\"\n      fullWidth\n      label={label}\n      autoFocus={autoFocus}\n      type={type}\n      InputProps={name === 'password' || name === 'confirmPassword' ? {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton onClick={handleShowPassword}>\n              {type === 'password' ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        ),\n      } : <></>}\n    />\n  </Grid>\n);\n\nexport default Input;\n","import React from \"react\";\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\n\nconst Alert = (props: AlertProps) => {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default Alert;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { signin } from '../../actions/auth';\nimport GoogleIcon from '../Helpers/GoogleIcon';\nimport useStyles from './styles';\nimport Input from '../Helpers/Input';\nimport { AUTH, ERROR } from '../../constants/actionTypes';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { useEffect } from 'react';\nimport Alert from '../Helpers/Alert';\n\n\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\n\nconst LoginUser = () => {\n  const { error } = useSelector((state: any) => state.error);\n  const [form, setForm] = useState(initialState);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [showError, setShowError] = React.useState(false);\n\n  useEffect(() => {\n    if (error) {\n      setShowError(true);\n      dispatch({ type: ERROR, data: null });\n    }\n  }, [error]);\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setShowError(false);\n  };\n\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    dispatch(signin(form, history));\n  };\n\n  const googleSuccess = async (res: any) => {\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n\n    try {\n      dispatch({ type: AUTH, data: { result, token } });\n\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => console.log('Google Sign In was unsuccessful. Try again later');\n\n  const handleChange = (e: any) => setForm({ ...form, [e.target.name]: e.target.value });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\" style={{ marginTop: \"80px\" }}>\n      <Paper className={classes.paper} elevation={6}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">Sign in</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Input\n              name=\"email\"\n              label=\"Email Address\"\n              handleChange={handleChange}\n              type=\"email\"\n            />\n            <Input\n              name=\"password\"\n              label=\"Password\"\n              handleChange={handleChange}\n              type={showPassword ? 'text' : 'password'}\n              handleShowPassword={() => setShowPassword(!showPassword)}\n            />\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <GoogleLogin\n            clientId=\"474583811201-b1sk77156pri1gh555quu5ol4naqlium.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button\n                className={classes.googleButton}\n                color=\"primary\"\n                fullWidth\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                startIcon={<GoogleIcon />}\n                variant=\"contained\">\n                Google Sign In\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleError}\n            cookiePolicy=\"single_host_origin\"\n          />\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button\n                onClick={() => history.push('/register')}\n                color=\"primary\"\n              >\n                Don't have an account? Sign Up\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n      <Snackbar open={showError} autoHideDuration={6000} onClose={handleClose}>\n        <Alert\n          onClose={handleClose}\n          severity=\"info\"\n          className={classes.alert}\n        >\n          Invalid Credentials\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n\nexport default LoginUser;\n","import { AUTH, ERROR } from '../constants/actionTypes';\nimport * as api from '../api';\n\nexport const signin = (formData: any, router: any) => async (dispatch: any) => {\n    try {\n        const { data } = await api.signIn(formData);\n        if(data?.error) {\n            dispatch({ type: ERROR, data });\n            return router.push('/loginUser'); \n        }\n        dispatch({ type: AUTH, data });\n\n        router.push('/');\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const signup = (formData: any, router: any) => async (dispatch: any) => {\n    try {\n        const { data } = await api.signUp(formData);\n        if(data?.error) {\n            dispatch({ type: ERROR, data });\n            return router.push('/register'); \n        }\n        dispatch({ type: AUTH, data });\n\n        router.push('/');\n    } catch (error) {\n        console.log(error);\n    }\n};\n","import React from 'react';\n\nconst Unauthorized = () => {\n    return (\n        <div>UNAUTHORIZED</div>\n    )\n}\n\nexport default Unauthorized;","import { Avatar, Button, Container, Grid, Paper, Snackbar, Typography } from '@material-ui/core';\nimport Alert from '../Helpers/Alert';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { signup } from '../../actions/auth';\nimport { ERROR } from '../../constants/actionTypes';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Input from '../Helpers/Input';\nimport useStyles from './styles';\nimport * as EmailValidator from 'email-validator';\n\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\n\nconst RegisterUser = () => {\n    const { error } = useSelector((state: any) => state.error);\n    const [form, setForm] = useState(initialState);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const classes = useStyles();\n    const [showPassword, setShowPassword] = useState(false);\n    const [showError, setShowError] = useState(false);\n\n\n    useEffect(() => {\n        if (error) {\n            setShowError(true);\n        }\n    }, [error]);\n\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        dispatch({ type: ERROR, data: null });\n        setShowError(false);\n    };\n\n    const handleSubmit = (e: any) => {\n        e.preventDefault();\n\n        if (form.password !== form.confirmPassword) {\n            return dispatch({ type: ERROR, data: { error: \"Passwords are not equal\" } });\n        }\n\n        if (!EmailValidator.validate(form.email)) {\n            return dispatch({ type: ERROR, data: { error: \"Wrong email format\" } });\n        }\n\n        dispatch(signup(form, history));\n    };\n\n    const handleChange = (e: any) => setForm({ ...form, [e.target.name]: e.target.value });\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\" style={{ marginTop: \"80px\" }}>\n            <Paper className={classes.paper} elevation={6}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">Sign up</Typography>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        <Input\n                            name=\"firstName\"\n                            label=\"First Name\"\n                            handleChange={handleChange}\n                            autoFocus\n                            half\n                        />\n                        <Input\n                            name=\"lastName\"\n                            label=\"Last Name\"\n                            handleChange={handleChange}\n                            half\n                        />\n                        <Input\n                            name=\"email\"\n                            label=\"Email Address\"\n                            handleChange={handleChange}\n                            type=\"email\"\n                        />\n                        <Input\n                            name=\"password\"\n                            label=\"Password\"\n                            handleChange={handleChange}\n                            type={showPassword ? 'text' : 'password'}\n                            handleShowPassword={() => setShowPassword(!showPassword)}\n                        />\n                        <Input\n                            name=\"confirmPassword\"\n                            label=\"Repeat Password\"\n                            handleChange={handleChange}\n                            type={showPassword ? 'text' : 'password'}\n                            handleShowPassword={() => setShowPassword(!showPassword)}\n                        />\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Button\n                                onClick={() => history.push('/loginUser')}\n                                color=\"primary\"\n                            >\n                                Already have an account? Sign in\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper>\n            <Snackbar open={showError} autoHideDuration={6000} onClose={handleClose}>\n                <Alert\n                    onClose={handleClose}\n                    severity=\"info\"\n                    className={classes.alert}\n                >\n                    {error}\n                </Alert>\n            </Snackbar>\n        </Container>\n    );\n};\n\nexport default RegisterUser;\n\n\n","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      height: '220px'\n    },\n    loadingPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: '20px',\n      borderRadius: '4px',\n      height: '75vh',\n      width: '100%',\n      marginTop: '20px'\n    },\n    title: {\n      fontSize: 14,\n    },\n  }),\n);","import { CREATE, DELETE, DELETE_SUCCESSFUL, END_LOADING, ERROR, FETCH_ALL, FETCH_FORM, START_LOADING, UPDATE, UPDATE_SUCCESSFUL } from \"../constants/actionTypes\";\nimport * as api from '../api';\n\nexport const getForms = () => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchForms();\n    dispatch({ type: FETCH_ALL, payload: { data } });\n    dispatch({ type: END_LOADING });\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nexport const getForm = (id: any) => async (dispatch: any) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.fetchForm(id);\n\n    dispatch({ type: FETCH_FORM, payload: { form: data } });\n    dispatch({ type: END_LOADING });\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nexport const createForm = (form, history) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const { data } = await api.createForm(form);\n\n    if (data?.error) {\n      dispatch({ type: ERROR, data });\n      return history.push('/addForm');\n    }\n\n    dispatch({ type: END_LOADING });\n    dispatch({ type: CREATE, payload: data });\n    history.push(`/`);\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nexport const updateForm = (form, history) => async (dispatch: any) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.updateForm(form._id, form);\n\n    if (data?.error) {\n      dispatch({ type: ERROR, data });\n      return history.push(`/editForm/${form._id}`);\n    }\n\n    dispatch({ type: UPDATE, payload: data });\n    dispatch({ type: UPDATE_SUCCESSFUL, payload: true });\n    dispatch({ type: END_LOADING });\n    return history.push(`/forms`);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const deleteForm = (id, history) => async (dispatch: any) => {\n  try {\n    dispatch({ type: START_LOADING });\n    await api.deleteForm(id);\n\n    dispatch({ type: DELETE, payload: id });\n    dispatch({ type: DELETE_SUCCESSFUL, payload: true });\n    dispatch({ type: END_LOADING });\n    return history.push(`/`);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n","import { Card, CardActions, CardContent, Grid, IconButton, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport useStyles from './styles';\nimport FormModel from '../../models/form';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\nimport { deleteForm } from '../../actions/forms';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { getAnswers } from '../../api';\n\ninterface props {\n    form: FormModel;\n}\n\nconst Form = (props: props) => {\n    const classes = useStyles();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const profile = localStorage.getItem('profile')!;\n    const loggedUser = JSON.parse(profile);\n    const [answersNumber, setAnswerNumbers] = useState(0);\n\n    useEffect(() => {\n        const fetchAnswers = async () => {\n            const obj = await getAnswers(props.form._id);\n            const answers = obj.data;\n            setAnswerNumbers(answers.length);\n        };\n        fetchAnswers();\n\n    }, [props.form._id]);\n\n    return (\n        <Grid item xs={12} md={6} lg={3} style={{ marginTop: \"10px\" }}>\n            <Card className={classes.root} raised>\n                <CardContent>\n                    <Typography\n                        gutterBottom\n                        variant=\"h5\"\n                        component=\"h2\"\n                        noWrap\n                    >\n                        {props.form.title}\n                    </Typography>\n                    <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                        gutterBottom\n                        noWrap\n                    >\n                        Description: {props.form.description}\n                    </Typography>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                        noWrap\n                    >\n                        Questions' number: {props.form.sections.length}\n                    </Typography>\n                    <Typography\n                        className={classes.title}\n                        color=\"textSecondary\"\n                        gutterBottom\n                        noWrap\n                    >\n                        Answers' number: {answersNumber}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <IconButton title=\"Add answer\" aria-label=\"answer\" onClick={() => history.push(`/answerForm/${props.form._id}`)}>\n                        <QuestionAnswerIcon fontSize=\"large\" color=\"secondary\" />\n                    </IconButton>\n                    <IconButton title=\"All answers\" aria-label=\"answer\" onClick={() => history.push(`showAnswers/${props.form._id}`)}>\n                        <ImportContactsIcon fontSize=\"large\" color=\"secondary\" />\n                    </IconButton>\n                    {loggedUser && Object.keys(loggedUser).length !== 0 && loggedUser?.result?._id === props.form.userId &&\n                        <>\n                            <IconButton title=\"Edit form\" aria-label=\"edit\" onClick={() => history.push(`/editForm/${props.form._id}`)}>\n                                <EditRoundedIcon fontSize=\"large\" color=\"secondary\" />\n                            </IconButton>\n                            <IconButton title=\"Delete form\" aria-label=\"delete\" onClick={() => dispatch(deleteForm(props.form._id, history))}>\n                                <DeleteIcon fontSize=\"large\" color=\"secondary\" />\n                            </IconButton>\n                        </>\n                    }\n                </CardActions>\n            </Card>\n        </Grid>\n    );\n};\n\nexport default Form;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Grid, CircularProgress, Grow, Paper, Button, Container, Snackbar } from '@material-ui/core';\nimport useStyles from './styles';\nimport { useHistory } from 'react-router';\nimport { getForms } from '../../actions/forms';\nimport FormModel from '../../models/form';\nimport Form from './Form';\nimport { ADD_ANSWER_SUCCESSFUL, DELETE_SUCCESSFUL, UPDATE_SUCCESSFUL } from '../../constants/actionTypes';\nimport Alert from '../Helpers/Alert';\n\nconst Forms = () => {\n    const { forms, isLoading, updateSuccessful, deleteSuccessful } = useSelector((state: any) => state.forms);\n    const { addAnswerSuccessful } = useSelector((state: any) => state.answers);\n    const history = useHistory();\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const profile = localStorage.getItem('profile')!;\n\n    const [showEditSuccess, setShowEditSuccess] = useState(false);\n    const [showDeleteSuccess, setShowDeleteSuccess] = useState(false);\n    const [showAddAnswerSuccess, setShowAddAnswerSuccess] = useState(false);\n    const [user, setUser] = useState(JSON.parse(profile));\n\n    useEffect(() => {\n        if (updateSuccessful) {\n            setShowEditSuccess(true);\n        }\n    }, [updateSuccessful]);\n\n    useEffect(() => {\n        if (deleteSuccessful) {\n            setShowDeleteSuccess(deleteSuccessful);\n        }\n    }, [deleteSuccessful]);\n\n\n    useEffect(() => {\n        if (addAnswerSuccessful) {\n            setShowAddAnswerSuccess(addAnswerSuccessful);\n        }\n    }, [addAnswerSuccessful]);\n\n    useEffect(() => {\n        dispatch(getForms());\n    }, [dispatch]);\n\n    const handleCloseEditSuccess = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        dispatch({ type: UPDATE_SUCCESSFUL, payload: false });\n        setShowEditSuccess(false);\n    };\n\n    const handleCloseDeleteSuccess = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        dispatch({ type: DELETE_SUCCESSFUL, payload: false });\n        setShowDeleteSuccess(false);\n    };\n\n    const handleCloseAddAnswerSuccess = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        dispatch({ type: ADD_ANSWER_SUCCESSFUL, payload: false });\n        setShowAddAnswerSuccess(false);\n    };\n\n    return (\n        <Container style={{ marginTop: \"100px\" }}>\n            {user?.result &&\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => history.push(\"/addForm\")}\n                >\n                    Add form\n                </Button>\n            }\n            {isLoading ?\n                <Paper elevation={6} className={classes.loadingPaper}>\n                    <CircularProgress size=\"7em\" color=\"primary\" value={100} />\n                </Paper>\n                :\n                <Grow in={true} timeout={{ enter: 1500 }}>\n                    <Grid container spacing={3}>\n                        {\n                            forms?.map((form: FormModel, index: number) => (\n                                <Form form={form} key={index} />\n                            ))\n                        }\n                    </Grid>\n                </Grow>\n            }\n            <Snackbar\n                open={showEditSuccess}\n                autoHideDuration={6000}\n                onClose={handleCloseEditSuccess}\n            >\n                <Alert\n                    onClose={handleCloseEditSuccess}\n                    severity=\"success\"\n                >\n                    Edit successful\n                </Alert>\n            </Snackbar>\n            <Snackbar\n                open={showDeleteSuccess}\n                autoHideDuration={6000}\n                onClose={handleCloseDeleteSuccess}\n            >\n                <Alert\n                    onClose={handleCloseDeleteSuccess}\n                    severity=\"success\"\n                >\n                    Delete successful\n                </Alert>\n            </Snackbar>\n            <Snackbar\n                open={showAddAnswerSuccess}\n                autoHideDuration={6000}\n                onClose={handleCloseAddAnswerSuccess}>\n                <Alert\n                    onClose={handleCloseAddAnswerSuccess}\n                    severity=\"success\"\n                >\n                    Adding answer successful\n                </Alert>\n            </Snackbar>\n        </Container>\n    );\n};\n\nexport default Forms;","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n\n    },\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: theme.spacing(2),\n    },\n    icon: {\n      margin: theme.spacing(1),\n    },\n\n    alert: {\n      backgroundColor: '#f50057',\n    },\n    loadingPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: '20px',\n      borderRadius: '15px',\n      height: '39vh',\n      marginTop: '1rem'\n    },\n    underline: {\n      '&::after': {\n        border: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '30px'\n      },\n      '&::before': {\n        borderBottom: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '30px'\n      }\n    }, \n    underlineLinear: {\n      '&::after': {\n        border: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '20px'\n      },\n      '&::before': {\n        borderBottom: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '20px'\n      }\n    },\n    typographyLinear: {\n      maxWidth: '150px',\n      paddingTop: '30px'\n    },\n    singleChoiceOption: {\n      fontSize: '13px',\n      color: '#3f51b5',\n      '&:hover': {\n        cursor: \"pointer\"\n      }\n    },\n    singleChoiceButtonsContainer: {\n      marginTop: '20px',\n      display: 'flex',\n      justifyContent: 'space-around',\n      alignItems: 'center'\n    },\n\n    singleChoiceOptionMargin: {\n      marginLeft: '140px',\n      '&:hover': {\n        cursor: \"pointer\"\n      }\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }),\n);","import React from 'react';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport ShortTextIcon from '@material-ui/icons/ShortText';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport LinearScaleIcon from '@material-ui/icons/LinearScale';\n\nexport class QuestionHelper {\n    static SHORT_TEXT = { icon: <ShortTextIcon />, text: \"Short answer\", value: \"shortText\",  }\n    static LONG_TEXT = { icon: <SubjectIcon />, text: \"Long answer\", value: \"longText\",  }\n    static SINGLE_CHOICE = { icon: <RadioButtonCheckedIcon />, text: \"Single choice\", value: \"singleChoice\",  }\n    static MULTIPLE_CHOICE = { icon: <CheckBoxIcon />, text: \"Multiple Choice\", value: \"multipleChoice\",  }\n    static LINEAR_SCALE = { icon: <LinearScaleIcon />, text: \"Linear scale\", value: \"linearScale\",  }\n} ","import { FormControl, FormControlLabel, Grid, InputAdornment, MenuItem, Radio, RadioGroup, Select, TextField, Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport useStyles from '../../Forms/AddForm/styles';\n\nconst LinearScaleQuestion = ({ handleLinearScale, index, section = null }) => {\n    const classes = useStyles();\n    const [min, setMin] = useState(0);\n    const [max, setMax] = useState(5);\n    const [minEtiquette, setMinEtiquette] = useState('');\n    const [maxEtiquette, setMaxEtiquette] = useState('');\n\n    useEffect(() => {\n        if (section) {\n            setMin(section.linearDetails.min);\n            setMinEtiquette(section.linearDetails.minText);\n            setMax(section.linearDetails.max);\n            setMaxEtiquette(section.linearDetails.maxText);\n        }\n    }, [section]);\n\n    useEffect(() => {\n        const details = {\n            min,\n            max,\n            minText: minEtiquette.trim(),\n            maxText: maxEtiquette.trim()\n        }\n        handleLinearScale(details, index);\n    }, [min, minEtiquette, max, maxEtiquette])\n\n    const handleChange = (i, e) => {\n        const name = e.target.name;\n        const value = e.target.value; \n        if(name === 'min') {\n            setMin(value);\n        }\n        else if(name === 'minText') {\n            setMinEtiquette(value.trim());\n        }\n        else if(name === 'max') {\n            setMax(value);\n        }\n        else if(name === 'maxText') {\n            setMaxEtiquette(value.trim());\n        }\n    }\n\n    const getScale = () => {\n        const options = [];\n        for (let i = min; i <= max; i++) {\n            options.push(\n                <FormControlLabel\n                    disabled\n                    key={i}\n                    control={<Radio color=\"primary\" />}\n                    label={i}\n                    labelPlacement=\"top\"\n                />\n            )\n        }\n        return options;\n    }\n\n    return (\n        <>\n            <Grid item xs={12}>\n                <FormControl className={classes.formControl}>\n                    <Select\n                        name=\"min\"\n                        value={min}\n                        onChange={e => handleChange(index, e)}\n                        variant=\"outlined\"\n                    >\n                        <MenuItem value={0}>0</MenuItem>\n                        <MenuItem value={1}>1</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                    <Select\n                        name=\"max\"\n                        value={max}\n                        onChange={e => handleChange(index, e)}\n                        variant=\"outlined\"\n                    >\n                        <MenuItem value={2}>2</MenuItem>\n                        <MenuItem value={3}>3</MenuItem>\n                        <MenuItem value={4}>4</MenuItem>\n                        <MenuItem value={5}>5</MenuItem>\n                        <MenuItem value={6}>6</MenuItem>\n                        <MenuItem value={7}>7</MenuItem>\n                        <MenuItem value={8}>8</MenuItem>\n                        <MenuItem value={9}>9</MenuItem>\n                        <MenuItem value={10}>10</MenuItem>\n                    </Select>\n                </FormControl>\n                <div style={{ marginTop: \"20px\" }}>\n                    <TextField\n                        value={minEtiquette}\n                        name=\"minText\"\n                        placeholder=\"Etiquette (optional)\"\n                        onChange={e => handleChange(index, e)}\n                        InputProps={{\n                            classes: { underline: classes.underlineLinear },\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <span>{min}</span>\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                </div>\n                <div style={{ marginTop: \"20px\" }}>\n                    <TextField\n                        value={maxEtiquette}\n                        name=\"maxText\"\n                        placeholder=\"Etiquette (optional)\"\n                        onChange={e => handleChange(index, e)}\n                        InputProps={{\n                            classes: { underline: classes.underlineLinear },\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <span>{max}</span>\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                </div>\n            </Grid>\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                <FormControl component=\"fieldset\">\n                    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\">\n                        <Typography className={classes.typographyLinear} noWrap>{minEtiquette}</Typography>\n                        {getScale().map(option => option)}\n                        <Typography className={classes.typographyLinear} noWrap>{maxEtiquette}</Typography>\n                    </RadioGroup>\n                </FormControl>\n            </Grid>\n        </>\n    )\n}\n\nexport default LinearScaleQuestion;","import { Button, IconButton, InputAdornment, TextField, Tooltip, Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport React, { useEffect, useState } from 'react';\nimport useStyles from '../../Forms/AddForm/styles';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n\nconst MultipleChoiceQuestion = ({ handleOptions, handleOtherOption, index, section = null }) => {\n    const classes = useStyles(); \n    const [options, setOptions] = useState([]);\n    const [customOptionVisible, setCustomOptionVisible] = useState(false);\n\n    useEffect(() => {\n        if (section) {\n            const sectionOptions = [];\n            for (let i = 0; i < section.singleMultiDetails.options.length; i++) {\n                const obj = {\n                    startIcon:  <CheckBoxOutlineBlankIcon />,\n                    placeholder: `Option ${i + 1}`,\n                    deleteIcon: <HighlightOffIcon />,\n                    value: section.singleMultiDetails.options[i]\n                }\n                sectionOptions.push(obj);\n            }\n            setOptions(sectionOptions);\n            setCustomOptionVisible(section.singleMultiDetails.otherOption);\n        }\n        else {\n            setOptions([{ startIcon:  <CheckBoxOutlineBlankIcon />, placeholder: \"Option 1\", deleteIcon: <HighlightOffIcon />, value: \"\" }]);\n        }\n    }, [section]);\n\n    const deleteOption = (i) => {\n        let newOptions = [...options];\n        newOptions.splice(i, 1);\n        setOptions(newOptions);\n\n        const values = newOptions.map(option => option.value.trim());\n        handleOptions(values, index);\n    }\n\n    const addRadioOption = (counter) => { \n        setOptions([...options, { startIcon: <CheckBoxOutlineBlankIcon />, placeholder: `Option ${counter}`, deleteIcon: <HighlightOffIcon />, value: \"\" }]) \n    }\n\n    const handleChange = (i, e) => {\n        let newOptions = [...options];\n        newOptions[i].value = e.target.value;\n        setOptions(newOptions);\n\n        const values = newOptions.map(option => option.value.trim());\n        handleOptions(values, index);\n    }\n\n    return (\n        <Grid item xs={10}>\n            {options.map((element, index) => {\n                return (\n                    <div key={index}>\n                        <TextField\n                            value={options[index].value}\n                            onChange={e => handleChange(index, e)}\n                            placeholder={element.placeholder}\n                            InputProps={{\n                                classes: { underline: classes.underline },\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        {element.startIcon}\n                                    </InputAdornment>\n                                ),\n                                endAdornment: options.length >= 2 && (\n                                    <Tooltip title=\"Delete option\" placement=\"right\">\n                                        <IconButton className={classes.singleChoiceOptionMargin} onClick={() => deleteOption(index)}>\n                                            {element.deleteIcon}\n                                        </IconButton>\n                                    </Tooltip>\n                                )\n                            }}\n                        />\n                    </div>\n                )\n            })}\n            {\n                customOptionVisible &&\n                <TextField\n                    placeholder=\"Other option...\"\n                    disabled\n                    InputProps={{\n                        classes: { underline: classes.underline },\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <CheckBoxOutlineBlankIcon />\n                            </InputAdornment>\n                        ),\n                        endAdornment: (\n                            <Tooltip title=\"Delete option\" placement=\"right\">\n                                <IconButton className={classes.singleChoiceOptionMargin} onClick={() => setCustomOptionVisible(false)}>\n                                    <HighlightOffIcon />\n                                </IconButton>\n                            </Tooltip>\n                        )\n                    }}\n                />\n            }\n\n            <div className={classes.singleChoiceButtonsContainer}>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => addRadioOption(options.length + 1)}>Add option</Button>\n                {\n                    !customOptionVisible &&\n                    <>\n                        <Typography>or</Typography>\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => {\n                            setCustomOptionVisible(true);\n                            handleOtherOption(true, index);\n                        }}>Add option \"other\"</Button>\n                    </>\n                }\n            </div>\n        </Grid>\n    )\n}\n\n\nexport default MultipleChoiceQuestion;","import { Button, IconButton, InputAdornment, TextField, Tooltip, Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport React, { useState } from 'react';\nimport useStyles from '../../Forms/AddForm/styles';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { useEffect } from 'react';\n\n\nconst SingleChoiceQuestion = ({ handleOptions, handleOtherOption, index, section = null }) => {\n    const classes = useStyles();\n    const [options, setOptions] = useState([]);\n    const [customOptionVisible, setCustomOptionVisible] = useState(false);\n\n    useEffect(() => {\n        if (section) {\n            const sectionOptions = [];\n            for (let i = 0; i < section.singleMultiDetails.options.length; i++) {\n                const obj = {\n                    startIcon: <RadioButtonUncheckedIcon />,\n                    placeholder: `Option ${i + 1}`,\n                    deleteIcon: <HighlightOffIcon />,\n                    value: section.singleMultiDetails.options[i]\n                }\n                sectionOptions.push(obj);\n            }\n            setOptions(sectionOptions);\n            setCustomOptionVisible(section.singleMultiDetails.otherOption);\n        }\n        else {\n            alert(\"TEST\");\n            setOptions([{ startIcon: <RadioButtonUncheckedIcon />, placeholder: \"Option 1\", deleteIcon: <HighlightOffIcon />, value: \"\" }]);\n        }\n    }, [section]);\n\n    const deleteOption = (i) => {\n        let newOptions = [...options];\n        newOptions.splice(i, 1);\n        setOptions(newOptions);\n\n        const values = newOptions.map(option => option.value.trim());\n        handleOptions(values, index);\n    }\n\n    const addRadioOption = (counter) => {\n        setOptions([...options, { startIcon: <RadioButtonUncheckedIcon />, placeholder: `Option ${counter}`, deleteIcon: <HighlightOffIcon />, value: \"\" }]);\n    }\n\n    const handleChange = (i, e) => {\n        let newOptions = [...options];\n        newOptions[i].value = e.target.value;\n        setOptions(newOptions);\n\n        const values = newOptions.map(option => option.value.trim());\n        handleOptions(values, index);\n    }\n\n    return (\n        <Grid item xs={10}>\n            {options.map((element, index) => {\n                return (\n                    <div key={index}>\n                        <TextField\n                            value={options[index].value}\n                            onChange={e => handleChange(index, e)}\n                            placeholder={element.placeholder}\n                            InputProps={{\n                                classes: { underline: classes.underline },\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        {element.startIcon}\n                                    </InputAdornment>\n                                ),\n                                endAdornment: options.length >= 2 && (\n                                    <Tooltip title=\"Delete option\" placement=\"right\">\n                                        <IconButton className={classes.singleChoiceOptionMargin} onClick={() => deleteOption(index)}>\n                                            {element.deleteIcon}\n                                        </IconButton>\n                                    </Tooltip>\n                                )\n                            }}\n                        />\n                    </div>\n                )\n            })}\n            {\n                customOptionVisible &&\n                <TextField\n                    placeholder=\"Other option...\"\n                    disabled\n                    InputProps={{\n                        classes: { underline: classes.underline },\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <RadioButtonUncheckedIcon />\n                            </InputAdornment>\n                        ),\n                        endAdornment: (\n                            <Tooltip title=\"Delete option\" placement=\"right\">\n                                <IconButton className={classes.singleChoiceOptionMargin} onClick={() => setCustomOptionVisible(false)}>\n                                    <HighlightOffIcon />\n                                </IconButton>\n                            </Tooltip>\n                        )\n                    }}\n                />\n            }\n\n            <div className={classes.singleChoiceButtonsContainer}>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => addRadioOption(options.length + 1)}>Add option</Button>\n                {\n                    !customOptionVisible &&\n                    <>\n                        <Typography>or</Typography>\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => {\n                            setCustomOptionVisible(true);\n                            handleOtherOption(true, index);\n                        }}>Add option \"other\"</Button>\n                    </>\n                }\n            </div>\n        </Grid>\n    )\n}\n\nexport default SingleChoiceQuestion;","import { Grid, TextField } from '@material-ui/core';\nimport React from 'react';\n\nconst LongTextQuestion = () => {\n    return (\n        <Grid item xs={10}>\n            <TextField placeholder=\"Long text\" fullWidth disabled />\n        </Grid>\n    )\n}\n\nexport default LongTextQuestion;","import { Grid, TextField } from '@material-ui/core';\nimport React from 'react';\n\nconst ShortTextQuestion = () => {\n    return (\n        <Grid item xs={5}>\n            <TextField placeholder=\"Short text\" fullWidth disabled />\n        </Grid>\n    )\n}\n\nexport default ShortTextQuestion;","import React, { useState } from 'react';\nimport { Button, ButtonGroup, Divider, FormControl, FormControlLabel, FormGroup, Grid, InputLabel, MenuItem, Paper, Select, Switch, TextField, Tooltip } from '@material-ui/core';\nimport { QuestionHelper } from '../../constants/questionTypes';\nimport useStyles from './AddForm/styles';\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\nimport LinearScaleQuestion from '../Helpers/LinearScale/LinearScaleQuestion';\nimport MultipleChoiceQuestion from '../Helpers/MultipleChoice/MultipleChoiceQuestion';\nimport SingleChoiceQuestion from '../Helpers/SingleChoice/SingleChoiceQuestion';\nimport LongTextQuestion from '../Helpers/LongText/LongTextQuestion';\nimport ShortTextQuestion from '../Helpers/ShortText/ShortTextQuestion';\nimport { useEffect } from 'react';\n\nconst Section = ({\n    section,\n    index,\n    removeSection,\n    handleChange,\n    handleRequired,\n    handleOptions,\n    handleOtherOption,\n    handleLinearScale,\n    sectionNumber,\n    handleDrag,\n    handleDrop\n}) => {\n    const classes = useStyles();\n    const [required, setRequired] = useState(false);\n\n    useEffect(() => {\n        setRequired(section.required);\n    }, [section]);\n\n    return (\n        <Paper\n            className={classes.paper}\n            elevation={6}\n            style={{ marginTop: \"10px\" }}\n            draggable={true}\n            id={sectionNumber}\n            onDragOver={(ev) => ev.preventDefault()}\n            onDragStart={handleDrag}\n            onDrop={handleDrop}\n        >\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={5}>\n                    <TextField\n                        placeholder=\"Question\"\n                        variant=\"filled\"\n                        fullWidth\n                        value={section.questionText || \"\"}\n                        onChange={e => handleChange(index, e, 'questionText')}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={5}>\n                    <FormControl fullWidth={true}>\n                        <InputLabel id=\"questionType\">Question type</InputLabel>\n                        <Select\n                            labelId=\"questionType\"\n                            value={section.questionType}\n                            onChange={e => handleChange(index, e, 'questionType')}\n                            MenuProps={{\n                                anchorOrigin: {\n                                    vertical: \"bottom\",\n                                    horizontal: \"left\"\n                                },\n                                getContentAnchorEl: null\n                            }}\n                        >\n                            {\n                                Object.keys(QuestionHelper).map((option, index) => (\n                                    <MenuItem key={index} value={QuestionHelper[option].value}>\n                                        <span>{QuestionHelper[option].icon}</span>\n                                        <span style={{ marginLeft: \"20px\", fontSize: \"20px\" }}>{QuestionHelper[option].text}</span>\n                                    </MenuItem>\n                                ))\n                            }\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n\n                {index &&\n                    <Grid item xs={2} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <ButtonGroup orientation=\"vertical\" variant=\"contained\" color=\"primary\">\n                            <Tooltip\n                                title=\"Delete question\"\n                                placement=\"bottom\"\n                            >\n                                <Button onClick={() => removeSection(index)}>\n                                    <DeleteForeverOutlinedIcon />\n                                </Button>\n                            </Tooltip>\n                        </ButtonGroup>\n                    </Grid>\n                }\n\n                {\n                    section.questionType === 'shortText' ?\n                        <ShortTextQuestion />\n                        : (\n                            section.questionType === 'longText' ?\n                                <LongTextQuestion />\n                                : (\n                                    section.questionType === 'singleChoice' ?\n                                        <SingleChoiceQuestion\n                                            handleOptions={handleOptions}\n                                            handleOtherOption={handleOtherOption}\n                                            index={index}\n                                            section={section}\n                                        />\n                                        : (\n                                            section.questionType === 'multipleChoice' ?\n                                                <MultipleChoiceQuestion\n                                                    handleOptions={handleOptions}\n                                                    handleOtherOption={handleOtherOption}\n                                                    index={index}\n                                                    section={section}\n                                                />\n                                                :\n                                                <LinearScaleQuestion\n                                                    handleLinearScale={handleLinearScale}\n                                                    index={index}\n                                                    section={section}\n                                                />\n                                        )\n                                )\n                        )\n                }\n\n                <Grid item xs={10}>\n                    <Divider orientation=\"horizontal\" />\n                </Grid>\n                <Grid item xs={10}>\n                    <FormControl component=\"fieldset\">\n                        <FormGroup aria-label=\"position\" row>\n                            <FormControlLabel\n                                checked={required}\n                                onChange={() => {\n                                    setRequired(!required);\n                                    handleRequired(section.required, index);\n                                }}\n                                control={<Switch color=\"primary\" />}\n                                label=\"Required\"\n                                labelPlacement=\"start\"\n                            />\n                        </FormGroup>\n                    </FormControl>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n};\n\nexport default Section;","import Section from './section'\n\nclass Form {\n    _id: String = \"\";\n    userId: String = \"\";\n    title: String = \"\";\n    description: String = \"\";\n    sections: Section[] = [];\n} \n\nexport default Form;","import LinearDetails from \"./linearDetails\";\nimport SingleMultiDetails from \"./singleMultiDetails\";\n\nclass Section {\n    id: String = \"\";\n    order: number = 1;\n    required: boolean = false;\n    questionText: String = \"\";\n    questionType: String = \"\";\n    singleMultiDetails: SingleMultiDetails;\n    linearDetails: LinearDetails;\n\n    constructor(id: String, order: number, required: boolean, questionText: String, questionType: String, singleMultiDetails: SingleMultiDetails, linearDetails: LinearDetails) {\n        this.id = id;\n        this.order = order;\n        this.required = required;\n        this.questionText = questionText; \n        this.questionType = questionType;\n        this.singleMultiDetails = singleMultiDetails;\n        this.linearDetails = linearDetails;\n    }\n}\n\nexport default Section;","class SingleMultiDetails {\n    options: String[] = [];\n    otherOption: boolean = false;\n}\n\nexport default SingleMultiDetails; ","class LinearDetails {\n    min: number = 0;\n    minText: String = \"\";\n    max: number = 10;\n    maxText: String = \"\";\n}\n\nexport default LinearDetails; ","import React, { useEffect, useState } from 'react';\nimport { Button, ButtonGroup, Container, Grid, Paper, Snackbar, TextField, Tooltip, Typography } from '@material-ui/core';\nimport useStyles from './styles';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nimport Section from '../Section';\nimport FormModel from '../../../models/form';\nimport SectionModel from '../../../models/section';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ERROR } from '../../../constants/actionTypes';\nimport Alert from '../../Helpers/Alert';\nimport { useHistory } from 'react-router-dom';\nimport { createForm } from '../../../actions/forms';\nimport SingleMultiDetails from '../../../models/singleMultiDetails';\nimport LinearDetails from '../../../models/linearDetails';\n\nexport const AddForm = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const { error } = useSelector((state: any) => state.error);\n    const [showError, setShowError] = useState(false);\n    const [dragId, setDragId] = useState();\n    const [sectionsNumber, setSectionsNumber] = useState(1);\n    const [formTitle, setFormTitle] = useState('');\n    const [formDescription, setFormDescription] = useState('');\n    const profile = localStorage.getItem('profile')!;\n    const [user, setUser] = useState(JSON.parse(profile));\n    const [sections, setSections] = useState([new SectionModel(`Section-${sectionsNumber}`, sectionsNumber, false, \"\", \"shortText\", new SingleMultiDetails(), new LinearDetails())]);\n\n    useEffect(() => {\n        if (error) {\n            setShowError(true);\n        }\n    }, [error]);\n\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        dispatch({ type: ERROR, data: null });\n        setShowError(false);\n    };\n\n    const handleChange = (index, event, inputType) => {\n        let newSections = [...sections];\n        newSections[index][inputType] = event.target.value;\n        setSections(newSections);\n    };\n\n    const handleRequired = (required, index) => {\n        let newSections = [...sections];\n        newSections[index].required = !required;\n        setSections(newSections);\n    };\n\n    const handleOptions = (options, index) => {\n        let newSections = [...sections];\n        newSections[index].singleMultiDetails.options = options;\n        setSections(newSections);\n    };\n\n    const handleOtherOption = (isOtherOption, index) => {\n        let newSections = [...sections];\n        newSections[index].singleMultiDetails.otherOption = isOtherOption;\n        setSections(newSections);\n    };\n\n    const handleLinearScale = (details, index) => {\n        let newSections = [...sections];\n        newSections[index].linearDetails = details;\n        setSections(newSections);\n    };\n\n    const addSection = () => {\n        setSections([...sections, new SectionModel(`Section-${sectionsNumber + 1}`, sectionsNumber + 1, false, \"\", \"shortText\", new SingleMultiDetails(), new LinearDetails())]);\n        setSectionsNumber(sectionsNumber + 1);\n    };\n\n    const removeSection = (index) => {\n        let newSections = [...sections];\n        newSections.splice(index, 1);\n        setSections(newSections);\n        setSectionsNumber(sectionsNumber - 1);\n    };\n\n    const handleDrag = (event) => setDragId(event.currentTarget.id);\n\n    const handleDrop = (event) => {\n        const dragSection = sections.find((section) => section.id === dragId);\n        const dropSection = sections.find((section) => section.id === event.currentTarget.id);\n\n        const dragSectionOrder = dragSection.order;\n        const dropSectionOrder = dropSection.order;\n\n        const newSectionState = sections.map((section) => {\n            if (section.id === dragId) {\n                section.order = dropSectionOrder;\n            }\n            if (section.id === event.currentTarget.id) {\n                section.order = dragSectionOrder;\n            }\n            return section;\n        });\n\n        setSections(newSectionState);\n    };\n\n    const handleSubmit = (event: React.SyntheticEvent) => {\n        event.preventDefault();\n        const form = new FormModel();\n        form.title = formTitle.trim();\n        form.description = formDescription.trim();\n        form.userId = user.result._id;\n\n        for (let section of sections) {\n            const sectionObj = new SectionModel(section.id, section.order, section.required, section.questionText, section.questionType, section.singleMultiDetails, section.linearDetails);\n            form.sections.push(sectionObj);\n        }\n\n        const formResult = validateForm(form);\n        if (!formResult.ok) {\n            return dispatch({ type: ERROR, data: { error: formResult.error } });\n        }\n\n        dispatch(createForm(form, history));\n    };\n\n    const validateForm = (form: FormModel) => {\n        if (form.title.trim().length === 0) {\n            return { ok: false, error: \"No form name\" };\n        }\n        if (form.description.trim().length === 0) {\n            return { ok: false, error: \"No form description\" };\n        }\n        for (let section of form.sections) {\n            if (section.questionText.length === 0) {\n                return { ok: false, error: \"No question text\" };\n            }\n\n            if (section.singleMultiDetails.options.length > 0) {\n                for (let option of section.singleMultiDetails.options) {\n                    if (option.length === 0) {\n                        return { ok: false, error: \"No option text\" };\n                    }\n                }\n            }\n\n            if ((section.questionType === \"singleChoice\" || section.questionType === \"multipleChoice\") && section.singleMultiDetails.options.length === 0) {\n                return { ok: false, error: \"No option text\" };\n            }\n        }\n        return { ok: true };\n    };\n\n\n    return (\n        <Container component=\"main\" style={{ marginTop: \"100px\" }}>\n            <form onSubmit={handleSubmit}>\n                <Paper className={classes.paper} elevation={6}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={10} alignItems=\"center\">\n                            <Typography component=\"h1\" variant=\"h5\" align=\"center\" gutterBottom>Add Form</Typography>\n                            <TextField\n                                onChange={(e) => { setFormTitle(e.target.value); }}\n                                value={formTitle}\n                                placeholder=\"Form name\"\n                                fullWidth\n                                variant=\"filled\"\n                                inputProps={{ style: { fontSize: 40 } }}\n                                style={{ fontSize: \"30px\", marginBottom: \"30px\" }}\n                            />\n                            <TextField\n                                onChange={(e) => { setFormDescription(e.target.value); }}\n                                value={formDescription}\n                                placeholder=\"Form description\"\n                                fullWidth\n                                style={{ marginBottom: \"30px\" }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={2} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <ButtonGroup orientation=\"vertical\" variant=\"contained\" color=\"primary\">\n                                <Tooltip\n                                    title=\"Add question\"\n                                    placement=\"bottom\">\n                                    <Button onClick={() => addSection()}>\n                                        <AddCircleOutlineOutlinedIcon />\n                                    </Button>\n                                </Tooltip>\n                            </ButtonGroup>\n                        </Grid>\n                    </Grid>\n                </Paper>\n                {\n                    sections\n                        .sort((a, b) => a.order - b.order)\n                        .map((section, index) => (\n                            <Section\n                                section={section}\n                                key={index}\n                                index={index}\n                                removeSection={removeSection}\n                                handleChange={handleChange}\n                                handleRequired={handleRequired}\n                                handleOptions={handleOptions}\n                                handleOtherOption={handleOtherOption}\n                                handleLinearScale={handleLinearScale}\n                                sectionNumber={section.id}\n                                handleDrag={handleDrag}\n                                handleDrop={handleDrop}\n                            />\n                        ))\n                }\n                <Button variant=\"contained\" color=\"primary\" fullWidth type=\"submit\">Save form</Button>\n            </form>\n            <Snackbar open={showError} autoHideDuration={6000} onClose={handleClose}>\n                <Alert\n                    onClose={handleClose}\n                    severity=\"warning\"\n                    className={classes.alert}\n                >\n                    {error}\n                </Alert>\n            </Snackbar>\n        </Container>\n    );\n};\n\nexport default AddForm;","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n\n    },\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: theme.spacing(2),\n    },\n    icon: {\n      margin: theme.spacing(1),\n    },\n\n    alert: {\n      backgroundColor: '#f50057',\n    },\n    loadingPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: '20px',\n      borderRadius: '15px',\n      height: '39vh',\n      marginTop: '1rem'\n    },\n    underline: {\n      '&::after': {\n        border: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '30px'\n      },\n      '&::before': {\n        borderBottom: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '30px'\n      }\n    }, \n    underlineLinear: {\n      '&::after': {\n        border: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '20px'\n      },\n      '&::before': {\n        borderBottom: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '20px'\n      }\n    },\n    typographyLinear: {\n      maxWidth: '150px',\n      paddingTop: '30px'\n    },\n    singleChoiceOption: {\n      fontSize: '13px',\n      color: '#3f51b5',\n      '&:hover': {\n        cursor: \"pointer\"\n      }\n    },\n    singleChoiceButtonsContainer: {\n      marginTop: '20px',\n      display: 'flex',\n      justifyContent: 'space-around',\n      alignItems: 'center'\n    },\n\n    singleChoiceOptionMargin: {\n      marginLeft: '140px',\n      '&:hover': {\n        cursor: \"pointer\"\n      }\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }),\n);","import React, { useEffect, useState } from 'react';\nimport { Button, ButtonGroup, CircularProgress, Container, Grid, Paper, Snackbar, TextField, Tooltip, Typography } from '@material-ui/core';\nimport useStyles from './styles';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nimport Section from '../Section';\nimport FormModel from '../../../models/form';\nimport SectionModel from '../../../models/section';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ERROR } from '../../../constants/actionTypes';\nimport Alert from '../../Helpers/Alert';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { getForm, updateForm } from '../../../actions/forms';\nimport SingleMultiDetails from '../../../models/singleMultiDetails';\nimport LinearDetails from '../../../models/linearDetails';\n \nexport const EditForm = () => {\n    const { id } = useParams<any>();\n    const classes = useStyles();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const { form, isLoading } = useSelector((state: any) => state.forms);\n    const { error } = useSelector((state: any) => state.error);\n    const [showError, setShowError] = useState(false);\n    const [dragId, setDragId] = useState();\n    const [sectionsNumber, setSectionsNumber] = useState(1);\n    const [formTitle, setFormTitle] = useState(form?.title);\n    const [formDescription, setFormDescription] = useState('');\n    const profile = localStorage.getItem('profile')!;\n    const [user, setUser] = useState(JSON.parse(profile));\n    const [sections, setSections] = useState([]);\n\n    useEffect(() => {\n        if (error) {\n            setShowError(true);\n        }\n    }, [error]);\n\n    useEffect(() => {\n        dispatch(getForm(id));\n    }, [id])\n\n    useEffect(() => {\n        if (form) {\n            setFormTitle(form.title);\n            setFormDescription(form.description);\n            setSections(form.sections);\n        }\n    }, [form])\n\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        dispatch({ type: ERROR, data: null });\n        setShowError(false);\n    };\n\n    const handleChange = (index, event, inputType) => {\n        let newSections = [...sections];\n        newSections[index][inputType] = event.target.value;\n        setSections(newSections);\n    }\n\n    const handleRequired = (required, index) => {\n        let newSections = [...sections];\n        newSections[index].required = !required;\n        setSections(newSections);\n    }\n\n    const handleOptions = (options, index) => {\n        let newSections = [...sections];\n        newSections[index].singleMultiDetails.options = options;\n        setSections(newSections);\n    }\n\n    const handleOtherOption = (isOtherOption, index) => {\n        let newSections = [...sections];\n        newSections[index].singleMultiDetails.otherOption = isOtherOption;\n        setSections(newSections);\n    }\n\n    const handleLinearScale = (details, index) => { \n        let newSections = [...sections];\n        newSections[index].linearDetails = details;\n        setSections(newSections);\n    }\n\n    const addSection = () => {\n        setSections([...sections, new SectionModel(`Section-${sectionsNumber + 1}`, sectionsNumber + 1, false, \"\", \"shortText\", new SingleMultiDetails(), new LinearDetails())]);\n        setSectionsNumber(sectionsNumber + 1);\n    }\n\n    const removeSection = (index) => {\n        let newSections = [...sections];\n        newSections.splice(index, 1);\n        setSections(newSections);\n        setSectionsNumber(sectionsNumber - 1);\n    }\n\n    const handleDrag = (event) => setDragId(event.currentTarget.id);\n\n    const handleDrop = (event) => {\n        const dragSection = sections.find((section) => section.id === dragId);\n        const dropSection = sections.find((section) => section.id === event.currentTarget.id);\n\n        const dragSectionOrder = dragSection.order;\n        const dropSectionOrder = dropSection.order;\n\n        const newSectionState = sections.map((section) => {\n            if (section.id === dragId) {\n                section.order = dropSectionOrder;\n            }\n            if (section.id === event.currentTarget.id) {\n                section.order = dragSectionOrder;\n            }\n            return section;\n        });\n\n        setSections(newSectionState);\n    };\n\n    const handleSubmit = (event: React.SyntheticEvent) => {\n        event.preventDefault();\n        const form = new FormModel();\n        form.title = formTitle.trim();\n        form.description = formDescription.trim();\n        form.userId = user.result._id;\n        form._id = id;\n\n        for (let section of sections) {\n            const sectionObj = new SectionModel(section.id, section.order, section.required, section.questionText, section.questionType, section.singleMultiDetails, section.linearDetails);\n            form.sections.push(sectionObj);\n        }\n\n        const formResult = validateForm(form);\n        if (!formResult.ok) {\n            return dispatch({ type: ERROR, data: { error: formResult.error } });\n        }\n\n        dispatch(updateForm(form, history));\n    }\n\n    const validateForm = (form: FormModel) => {\n        if (form.title.trim().length === 0) {\n            return { ok: false, error: \"No form name\" };\n        }\n        if (form.description.trim().length === 0) {\n            return { ok: false, error: \"No form description\" };\n        }\n        for (let section of form.sections) {\n            if (section.questionText.length === 0) {\n                return { ok: false, error: \"No question text\" };\n            }\n\n            if (section.singleMultiDetails.options.length > 0) {\n                for (let option of section.singleMultiDetails.options) {\n                    if (option.length === 0) {\n                        return { ok: false, error: \"No option text\" };\n                    }\n                }\n            }\n            if((section.questionType === \"singleChoice\" || section.questionType === \"multipleChoice\") && section.singleMultiDetails.options.length === 0) {\n                return { ok: false, error: \"No option text\" };\n            }\n        }\n        return { ok: true }\n    }\n\n\n    if (isLoading) {\n        return (\n            <Container component=\"main\" style={{ marginTop: \"100px\" }}>\n                <Paper elevation={6} className={classes.loadingPaper} style={{ marginTop: \"80px\" }}>\n                    <CircularProgress size=\"7em\" color=\"secondary\" />\n                </Paper>\n            </Container>\n        );\n    }\n\n    return (\n        <Container component=\"main\" style={{ marginTop: \"100px\" }}>\n            <form onSubmit={handleSubmit}>\n                <Paper className={classes.paper} elevation={6}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={10} alignItems=\"center\">\n                            <Typography component=\"h1\" variant=\"h5\" align=\"center\" gutterBottom>Edit Form</Typography>\n                            <TextField onChange={(e) => { setFormTitle(e.target.value) }} value={formTitle} placeholder=\"Form name\" fullWidth variant=\"filled\" inputProps={{ style: { fontSize: 40 } }} style={{ fontSize: \"30px\", marginBottom: \"30px\" }} />\n                            <TextField onChange={(e) => { setFormDescription(e.target.value) }} value={formDescription} placeholder=\"Form description\" fullWidth style={{ marginBottom: \"30px\" }} />\n                        </Grid>\n                        <Grid item xs={12} sm={2} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            <ButtonGroup orientation=\"vertical\" variant=\"contained\" color=\"primary\">\n                                <Tooltip title=\"Add question\" placement=\"bottom\"><Button onClick={() => addSection()}><AddCircleOutlineOutlinedIcon /></Button></Tooltip>\n                            </ButtonGroup>\n                        </Grid>\n                    </Grid>\n                </Paper>\n                {\n                    sections\n                        .sort((a, b) => a.order - b.order)\n                        .map((section, index) => (\n                            <Section\n                                section={section}\n                                key={index}\n                                index={index}\n                                removeSection={removeSection}\n                                handleChange={handleChange}\n                                handleRequired={handleRequired}\n                                handleOptions={handleOptions}\n                                handleOtherOption={handleOtherOption}\n                                handleLinearScale={handleLinearScale}\n                                sectionNumber={section.id}\n                                handleDrag={handleDrag}\n                                handleDrop={handleDrop}\n                            />\n                        ))\n                }\n                <Button variant=\"contained\" color=\"primary\" fullWidth type=\"submit\">Save form</Button>\n            </form>\n            <Snackbar open={showError} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"warning\" className={classes.alert}>{error}</Alert>\n            </Snackbar>\n        </Container>\n    )\n}\n\nexport default EditForm;","class Answer {\n    text: String = \"\";\n    singleOption: String = \"\";\n    multiOptions: String[] = [];\n    linearOption: number = -1;\n    questionType: String = \"\";\n    required: boolean = false;\n    questionText : String = \"\";\n\n    constructor(questionType, required, questionText) {\n        this.questionType = questionType;\n        this.required = required;\n        this.questionText = questionText;\n    }\n}\n\nexport default Answer; ","import Answer from \"./answer\";\n\nclass FormAnswer {\n    formId: String = \"\";\n    nick: String = \"\";\n    answers: Answer[] = [];\n\n    constructor(formId) {\n        this.formId = formId;\n    }\n}\n\nexport default FormAnswer; ","import { Button } from '@material-ui/core';\nimport { FormControl, FormControlLabel, Grid, Radio, RadioGroup, Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\n\nconst LinearScaleAnswer = ({ section, handleLinearOption, index }) => {\n    const [value, setValue] = useState(-1);\n\n    useEffect(() => {\n        handleLinearOption(value, index);\n    }, [value])\n\n    const getScale = () => {\n        const options = [];\n        for (let i = section.linearDetails.min; i <= section.linearDetails.max; i++) {\n            options.push(\n                <FormControlLabel\n                    checked={value === i}\n                    onChange={() => setValue(i)}\n                    key={i}\n                    control={<Radio color=\"primary\" />}\n                    label={i}\n                    labelPlacement=\"top\"\n                />\n            )\n        }\n        return options;\n    }\n\n    return (\n        <>\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                <FormControl component=\"fieldset\">\n                    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\">\n                        <Typography style={{ maxWidth: '150px', paddingTop: '30px' }} noWrap>{section.linearDetails.minText}</Typography>\n                        {getScale().map(option => option)}\n                        <Typography style={{ maxWidth: '150px', paddingTop: '30px' }} noWrap>{section.linearDetails.maxText}</Typography>\n                    </RadioGroup>\n                </FormControl>\n            </Grid>\n            {value >= 0 &&\n                <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => setValue(-1)}>Uncheck</Button>\n                </Grid>\n            }\n        </>\n    )\n}\n\nexport default LinearScaleAnswer;","import { Grid, TextField } from '@material-ui/core';\nimport React from 'react';\n\nconst LongTextAnswer = ({ section, handleTextChange, index }) => {\n    return (\n        <Grid item xs={12}>\n            <TextField id=\"standard-required\" label=\"Answer\" fullWidth onChange={(e) => handleTextChange(index, e)} />\n        </Grid>\n    )\n}\n\nexport default LongTextAnswer; ","import { Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, Grid, TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\n\nconst MultipleChoiceAnswer = ({ section, handleMultipleOptions, index }) => {\n    const [options, setOptions] = useState({});\n\n    useEffect(() => {\n        const obj = {};\n        for (let i = 0; i < section.singleMultiDetails.options.length; i++) {\n            obj[section.singleMultiDetails.options[i]] = false;\n        }\n        if(section.singleMultiDetails.otherOption) {\n            obj['otherOption'] = \"\";\n        }\n        setOptions(obj);\n    }, []);\n\n    useEffect(() => {\n        handleMultipleOptions(options, index)\n    }, [options])\n\n    const handleChange = (event) => { \n        setOptions({ ...options, [event.target.name]: event.target.checked });\n    }\n\n    return (\n        <Grid item xs={12}>\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Choose option</FormLabel>\n                <FormControl component=\"fieldset\">\n                    <FormGroup>\n                        {\n                            section.singleMultiDetails.options.map((option, index) => {\n                                return (\n                                    <FormControlLabel\n                                        key={index}\n                                        control={<Checkbox color=\"primary\" checked={options[option] || false} onChange={handleChange} name={option} />}\n                                        label={option}\n                                    />\n                                )\n                            })\n                        }\n                    </FormGroup>\n                </FormControl>\n                {section.singleMultiDetails.otherOption &&\n                    <TextField id=\"standard-required\" label=\"Other option\" value={options['otherOption']} name=\"otherOption\" onChange={(event) => setOptions({ ...options, [event.target.name]: event.target.value })}/>\n                }\n            </FormControl>\n        </Grid>\n    )\n}\n\nexport default MultipleChoiceAnswer;","import { Grid, TextField, Typography } from '@material-ui/core';\nimport React from 'react';\n\nconst ShortTextAnswer = ({ section, handleTextChange, index }) => {\n    return (\n        <Grid item xs={12}>\n            <TextField id=\"standard-required\" label=\"Answer\" onChange={(e) => handleTextChange(index, e)} />\n        </Grid>\n    )\n}\n\nexport default ShortTextAnswer;","import { Button, FormControl, FormControlLabel, FormLabel, Grid, Radio, RadioGroup, TextField } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\n\nconst SingleChoiceAnswer = ({ section, handleSingleOption, index }) => {\n    const [selectedValue, setSelectedValue] = useState('');\n    const [otherOption, setOtherOption] = useState('');\n    const [option, setOption] = useState('');\n\n    useEffect(() => {\n        handleSingleOption(option, index)\n    }, [option]);\n\n    return (\n        <>\n            <Grid item xs={12}>\n                <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Choose only one option</FormLabel>\n                    <RadioGroup aria-label=\"singleChoice\" name=\"singleChoice\" value={selectedValue} onChange={(e) => {\n                        setSelectedValue(e.target.value);\n                        setOption(e.target.value);\n                        setOtherOption('');\n                    }}>\n                        {\n                            section.singleMultiDetails.options.map((option, index) => {\n                                return (\n                                    <FormControlLabel key={index} value={option} control={<Radio color=\"primary\" />} label={option} />\n                                )\n                            })\n                        }\n                    </RadioGroup>\n                    {section.singleMultiDetails.otherOption &&\n                        <TextField id=\"standard-required\" label=\"Other answer\" value={otherOption} disabled={selectedValue.length > 0} onChange={(e) => {\n                            setOtherOption(e.target.value);\n                            setOption(e.target.value);\n                        }}/>\n                    }\n                </FormControl>\n            </Grid>\n            {selectedValue &&\n                <Grid item xs={12}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => {\n                        setSelectedValue('');\n                        setOption('');\n                    }}>Uncheck</Button>\n                </Grid>\n            }\n        </>\n    )\n}\n\nexport default SingleChoiceAnswer;","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n\n    },\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: theme.spacing(2),\n    },\n    icon: {\n      margin: theme.spacing(1),\n    },\n\n    alert: {\n      backgroundColor: '#f50057',\n    },\n    loadingPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: '20px',\n      borderRadius: '15px',\n      height: '39vh',\n      marginTop: '1rem'\n    },\n    underline: {\n      '&::after': {\n        border: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '30px'\n      },\n      '&::before': {\n        borderBottom: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '30px'\n      }\n    }, \n    underlineLinear: {\n      '&::after': {\n        border: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '20px'\n      },\n      '&::before': {\n        borderBottom: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '20px'\n      }\n    },\n    typographyLinear: {\n      maxWidth: '150px',\n      paddingTop: '30px'\n    },\n    singleChoiceOption: {\n      fontSize: '13px',\n      color: '#3f51b5',\n      '&:hover': {\n        cursor: \"pointer\"\n      }\n    },\n    singleChoiceButtonsContainer: {\n      marginTop: '20px',\n      display: 'flex',\n      justifyContent: 'space-around',\n      alignItems: 'center'\n    },\n\n    singleChoiceOptionMargin: {\n      marginLeft: '140px',\n      '&:hover': {\n        cursor: \"pointer\"\n      }\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }),\n);","import { Button, CircularProgress, Container, Grid, Paper, Snackbar, TextField, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { addAnswer } from '../../../actions/answer';\nimport { getForm } from '../../../actions/forms';\nimport { ERROR } from '../../../constants/actionTypes';\nimport Answer from '../../../models/answer';\nimport FormAnswer from '../../../models/formAnswer';\nimport Alert from '../../Helpers/Alert';\nimport LinearScaleAnswer from '../../Helpers/LinearScale/LinearScaleAnswer';\nimport LongTextAnswer from '../../Helpers/LongText/LongTextAnswer';\nimport MultipleChoiceAnswer from '../../Helpers/MultipleChoice/MultipleChoiceAnswer';\nimport ShortTextAnswer from '../../Helpers/ShortText/ShortTextAnswer';\nimport SingleChoiceAnswer from '../../Helpers/SingleChoice/SingleChoiceAnswer';\nimport useStyles from './styles';\n\nconst AnswerForm = () => {\n    const history = useHistory();\n    const { id } = useParams<any>();\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const { form, isLoading } = useSelector((state: any) => state.forms);\n    const { error } = useSelector((state: any) => state.error);\n    const [showError, setShowError] = useState(false);\n    const [nick, setNick] = useState('');\n    const [formAnswer, setFormAnswer] = useState(null);\n\n    useEffect(() => {\n        dispatch(getForm(id));\n    }, [id]);\n\n    useEffect(() => {\n        if (error) {\n            setShowError(true);\n        }\n    }, [error]);\n\n    useEffect(() => {\n        if (formAnswer) {\n            let newFormAnswer = formAnswer;\n            newFormAnswer.nick = nick;\n            setFormAnswer(newFormAnswer);\n        }\n    }, [nick]);\n\n    useEffect(() => {\n        const answers = [];\n        if (form) {\n            for (let section of form.sections) {\n                const answer = new Answer(section.questionType, section.required, section.questionText);\n                answers.push(answer);\n            }\n            const newFormAnswer = new FormAnswer(form._id);\n            newFormAnswer.answers = answers;\n            setFormAnswer(newFormAnswer);\n        }\n    }, [form]);\n\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        dispatch({ type: ERROR, data: null });\n        setShowError(false);\n    };\n\n    const handleTextChange = (index, event) => {\n        const newFormAnswer = JSON.parse(JSON.stringify(formAnswer));\n        newFormAnswer.answers[index].text = event.target.value;\n        setFormAnswer(newFormAnswer);\n    };\n\n    const handleSingleOption = (option, index) => {\n        const newFormAnswer = JSON.parse(JSON.stringify(formAnswer));\n        if (newFormAnswer) {\n            newFormAnswer.answers[index].singleOption = option;\n            setFormAnswer(newFormAnswer);\n        }\n    };\n\n    const handleMultipleOptions = (obj, index) => {\n        const newFormAnswer = JSON.parse(JSON.stringify(formAnswer));\n        const options = [];\n\n        for (let prop of Object.getOwnPropertyNames(obj)) {\n            if (prop !== 'otherOption') {\n                if (obj[prop]) {\n                    options.push(prop);\n                }\n            }\n            else if (prop === 'otherOption' && obj.otherOption.trim().length > 0) {\n                options.push(obj.otherOption);\n            }\n        }\n\n        if (newFormAnswer) {\n            newFormAnswer.answers[index].multiOptions = options;\n            setFormAnswer(newFormAnswer);\n        }\n    };\n\n    const handleLinearOption = (option, index) => {\n        const newFormAnswer = JSON.parse(JSON.stringify(formAnswer));\n        if (newFormAnswer) {\n            newFormAnswer.answers[index].linearOption = option;\n            setFormAnswer(newFormAnswer);\n        }\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const formResult = validateForm(formAnswer);\n        if (!formResult.ok) {\n            return dispatch({ type: ERROR, data: { error: formResult.error } });\n        }\n\n        dispatch(addAnswer(formAnswer, history));\n    };\n\n    const validateForm = (form) => {\n        if (nick.trim().length === 0) {\n            return { ok: false, error: \"No nick given\" };\n        }\n\n        for (let answer of form.answers) {\n            if (answer.required && (answer.questionType === 'shortText' || answer.questionType === 'longText') && answer.text.trim().length === 0) {\n                return { ok: false, error: \"No text answer given\" };\n            }\n\n            if (answer.required && answer.questionType === 'singleChoice' && answer.singleOption.trim().length === 0) {\n                return { ok: false, error: \"No single choice answer given\" };\n            }\n\n            if (answer.required && answer.questionType === 'multipleChoice' && answer.multiOptions.length === 0) {\n                return { ok: false, error: \"No multiple choice answer given\" };\n            }\n\n            if (answer.required && answer.questionType === 'linearScale' && answer.linearOption === -1) {\n                return { ok: false, error: \"No linear answer given\" };\n            }\n        }\n        return { ok: true };\n    };\n\n\n    if (isLoading) {\n        return (\n            <Container component=\"main\" style={{ marginTop: \"100px\" }}>\n                <Paper elevation={6} className={classes.loadingPaper} style={{ marginTop: \"80px\" }}>\n                    <CircularProgress size=\"7em\" color=\"secondary\" />\n                </Paper>\n            </Container>\n        );\n    }\n\n    if (!form) return null;\n\n    return (\n        <Container component=\"main\" style={{ marginTop: \"100px\" }}>\n            <form onSubmit={handleSubmit}>\n                <Paper className={classes.paper} elevation={6}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} alignItems=\"center\">\n                            <Typography\n                                component=\"h1\"\n                                variant=\"h5\"\n                                align=\"center\"\n                                gutterBottom\n                            >\n                                Add answer\n                            </Typography>\n                            <Typography\n                                component=\"h1\"\n                                variant=\"h6\">\n                                <span style={{ fontWeight: 300 }}>\n                                    Form title: </span>{form.title}\n                            </Typography>\n                            <Typography\n                                gutterBottom\n                                component=\"h1\"\n                                variant=\"h6\">\n                                <span style={{ fontWeight: 300 }}>\n                                    Form description: </span>{form.description}\n                            </Typography>\n                            <TextField\n                                label=\"Your nick *\"\n                                value={nick}\n                                onChange={(e) => setNick(e.target.value)}\n                            />\n                        </Grid>\n                    </Grid>\n                </Paper>\n                {form.sections.map((section, index) => {\n                    return (\n                        <Paper\n                            key={index}\n                            className={classes.paper}\n                            elevation={6}\n                            style={{ marginTop: \"10px\" }}\n                        >\n                            <Grid container spacing={3}>\n                                <Grid item xs={12} sm={5}>\n                                    <Typography\n                                        component=\"h1\"\n                                        variant=\"h6\"\n                                        gutterBottom\n                                        noWrap\n                                    >\n                                        <span\n                                            style={{ fontWeight: 300 }}\n                                        >\n                                            Question{section.required && '*'} :</span> {section.questionText}\n                                    </Typography>\n                                </Grid>\n                                {section.questionType === 'shortText' ?\n                                    <ShortTextAnswer\n                                        section={section}\n                                        handleTextChange={handleTextChange}\n                                        index={index}\n                                    />\n                                    : (\n                                        section.questionType === 'longText' ?\n                                            <LongTextAnswer\n                                                section={section}\n                                                handleTextChange={handleTextChange}\n                                                index={index}\n                                            />\n                                            : (\n                                                section.questionType === 'singleChoice' ?\n                                                    <SingleChoiceAnswer\n                                                        section={section}\n                                                        handleSingleOption={handleSingleOption}\n                                                        index={index}\n                                                    />\n                                                    : (\n                                                        section.questionType === 'multipleChoice' ?\n                                                            <MultipleChoiceAnswer\n                                                                section={section}\n                                                                handleMultipleOptions={handleMultipleOptions}\n                                                                index={index}\n                                                            />\n                                                            :\n                                                            <LinearScaleAnswer\n                                                                section={section}\n                                                                handleLinearOption={handleLinearOption}\n                                                                index={index}\n                                                            />\n                                                    )\n                                            )\n                                    )\n                                }\n                            </Grid>\n                        </Paper>\n                    );\n                })\n                }\n                <Button variant=\"contained\" color=\"primary\" fullWidth type=\"submit\">Save answer</Button>\n            </form>\n            <Snackbar open={showError} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"warning\" className={classes.alert}>{error}</Alert>\n            </Snackbar>\n        </Container>\n    );\n};\n\nexport default AnswerForm;","import { ADD_ANSWER_SUCCESSFUL, END_LOADING, ERROR, GET_ANSWERS, START_LOADING } from \"../constants/actionTypes\";\nimport * as api from '../api';\n\nexport const getAnswers = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.getAnswers(id);\n    dispatch({ type: GET_ANSWERS, payload: data });\n    return data;\n  }\n  catch (error) {\n    console.log(error);\n  }\n}\n\nexport const addAnswer = (formAnswer, history) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.addAnswer(formAnswer);\n\n    if (data?.error) {\n      dispatch({ type: ERROR, data });\n      return history.push(`/answerForm/${formAnswer.formId}`);\n    }\n\n    dispatch({ type: ADD_ANSWER_SUCCESSFUL, payload: true });\n    dispatch({ type: END_LOADING });\n    return history.push(`/forms`);\n  } catch (error) {\n    console.log(error);\n  }\n}","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n\n    },\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: theme.spacing(2),\n    },\n    icon: {\n      margin: theme.spacing(1),\n    },\n\n    alert: {\n      backgroundColor: '#f50057',\n    },\n    loadingPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: '20px',\n      borderRadius: '15px',\n      height: '39vh',\n      marginTop: '1rem'\n    },\n    underline: {\n      '&::after': {\n        border: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '30px'\n      },\n      '&::before': {\n        borderBottom: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '30px'\n      }\n    }, \n    underlineLinear: {\n      '&::after': {\n        border: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '20px'\n      },\n      '&::before': {\n        borderBottom: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '20px'\n      }\n    },\n    typographyLinear: {\n      maxWidth: '150px',\n      paddingTop: '30px'\n    },\n    singleChoiceOption: {\n      fontSize: '13px',\n      color: '#3f51b5',\n      '&:hover': {\n        cursor: \"pointer\"\n      }\n    },\n    singleChoiceButtonsContainer: {\n      marginTop: '20px',\n      display: 'flex',\n      justifyContent: 'space-around',\n      alignItems: 'center'\n    },\n\n    singleChoiceOptionMargin: {\n      marginLeft: '140px',\n      '&:hover': {\n        cursor: \"pointer\"\n      }\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n    table: {\n      minWidth: 650,\n    },\n  }),\n);","import { Accordion, AccordionDetails, AccordionSummary, CircularProgress, Container, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getAnswers } from '../../../actions/answer';\nimport { getForm } from '../../../actions/forms';\nimport useStyles from './styles';\n\nconst ShowAnswers = () => {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const { form, isLoading } = useSelector((state: any) => state.forms);\n    const { answers } = useSelector((state: any) => state.answers);\n    const { id } = useParams<any>();\n\n    useEffect(() => {\n        dispatch(getForm(id));\n    }, [id])\n\n    useEffect(() => {\n        dispatch(getAnswers(id));\n    }, [id])\n\n    if (isLoading) {\n        return (\n            <Container component=\"main\" style={{ marginTop: \"100px\" }}>\n                <Paper elevation={6} className={classes.loadingPaper} style={{ marginTop: \"80px\" }}>\n                    <CircularProgress size=\"7em\" color=\"secondary\" />\n                </Paper>\n            </Container>\n        );\n    }\n\n    if (!form) return null;\n    if (!answers) return null;\n\n    const getCorrectAnswer = (answer, index) => {\n        if (answer.questionType === 'shortText') {\n            return (\n                <TableRow key={index}>\n                    <TableCell component=\"th\" scope=\"row\">\n                        <Typography>{answer.questionText}</Typography>\n                    </TableCell>\n                    <TableCell align=\"right\"><Typography>Short text</Typography></TableCell>\n                    <TableCell align=\"right\"><Typography>{answer.required ? 'YES' : 'NO'}</Typography></TableCell>\n                    <TableCell align=\"right\">{answer.text ? answer.text : '(no answer)'}</TableCell>\n                </TableRow>\n            )\n        }\n        else if (answer.questionType === 'longText') {\n            return (\n                <TableRow key={index}>\n                    <TableCell component=\"th\" scope=\"row\">\n                        <Typography>{answer.questionText}</Typography>\n                    </TableCell>\n                    <TableCell align=\"right\"><Typography>Long text</Typography></TableCell>\n                    <TableCell align=\"right\"><Typography>{answer.required ? 'YES' : 'NO'}</Typography></TableCell>\n                    <TableCell align=\"right\">{answer.text ? answer.text : '(no answer)'}</TableCell>\n                </TableRow>\n            )\n        }\n        else if (answer.questionType === 'singleChoice') {\n            return (\n                <TableRow key={index}>\n                    <TableCell component=\"th\" scope=\"row\">\n                        <Typography>{answer.questionText}</Typography>\n                    </TableCell>\n                    <TableCell align=\"right\"><Typography>Single choice</Typography></TableCell>\n                    <TableCell align=\"right\"><Typography>{answer.required ? 'YES' : 'NO'}</Typography></TableCell>\n                    <TableCell align=\"right\">{answer.singleOption ? answer.singleOption : '(no answer)'}</TableCell>\n                </TableRow>\n            )\n        }\n        else if (answer.questionType === 'multipleChoice') {\n            return (\n                <TableRow key={index}>\n                    <TableCell component=\"th\" scope=\"row\">\n                        <Typography>{answer.questionText}</Typography>\n                    </TableCell>\n                    <TableCell align=\"right\"><Typography>Multiple choice</Typography></TableCell>\n                    <TableCell align=\"right\"><Typography>{answer.required ? 'YES' : 'NO'}</Typography></TableCell>\n                    <TableCell align=\"right\">{answer.multiOptions && answer.multiOptions.length > 0 ? answer.multiOptions.join(', ') : '(no answer)'}</TableCell>\n                </TableRow>\n            )\n        }\n        else if (answer.questionType === 'linearScale') {\n            return (\n                <TableRow key={index}>\n                    <TableCell component=\"th\" scope=\"row\">\n                        <Typography>{answer.questionText}</Typography>\n                    </TableCell>\n                    <TableCell align=\"right\"><Typography>Linear scale</Typography></TableCell>\n                    <TableCell align=\"right\"><Typography>{answer.required ? 'YES' : 'NO'}</Typography></TableCell>\n                    <TableCell align=\"right\">{answer.linearOption ? answer.linearOption : '(no answer)'}</TableCell>\n                </TableRow>\n            )\n        }\n    }\n\n    return (\n        <Container component=\"main\" style={{ marginTop: \"100px\" }}>\n            <Paper className={classes.paper} elevation={6}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} alignItems=\"center\">\n                        <Typography component=\"h1\" variant=\"h5\" align=\"center\" gutterBottom>Answers</Typography>\n                        <Typography component=\"h1\" variant=\"h6\"><span style={{ fontWeight: 300 }}>Form title: </span>{form.title}</Typography>\n                        <Typography gutterBottom component=\"h1\" variant=\"h6\"><span style={{ fontWeight: 300 }}>Form description: </span>{form.description}</Typography>\n                    </Grid>\n                </Grid>\n            </Paper>\n            {answers.length > 0 ?\n                answers.map((formAnswer, index) => {\n                    return (\n                        <Accordion key={index}>\n                            <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\">\n                                <Typography className={classes.heading}>Answer author: {formAnswer.nick}</Typography>\n                            </AccordionSummary>\n                            <AccordionDetails style={{ display: \"block\" }}>\n                                <TableContainer>\n                                    <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Question</TableCell>\n                                                <TableCell align=\"right\">Question type</TableCell>\n                                                <TableCell align=\"right\">Required answer</TableCell>\n                                                <TableCell align=\"right\">Answer</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {formAnswer.answers &&\n                                                formAnswer.answers.map((answer, index) => {\n                                                    return getCorrectAnswer(answer, index)\n                                                })\n                                            }\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </AccordionDetails>\n                        </Accordion>\n                    )\n                })\n                :\n                <Accordion>\n                    <AccordionSummary aria-controls=\"panel1a-content\">\n                        <Typography className={classes.heading}>No answers</Typography>\n                    </AccordionSummary>\n                </Accordion>\n            }\n        </Container>\n    )\n}\n\nexport default ShowAnswers;","class Goal {\n  _id: String = \"\";\n  userId: String = \"\";\n  title: String = \"\";\n  description: String = \"\";\n  cadence: String = \"\";\n  complete: Boolean = false;\n}\n\nexport default Goal;","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: theme.spacing(2),\n    },\n    alert: {\n      backgroundColor: '#f50057',\n    },\n    loadingPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: '20px',\n      borderRadius: '15px',\n      height: '39vh',\n      marginTop: '1rem'\n    },\n    underline: {\n      '&::after': {\n        border: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '30px'\n      },\n      '&::before': {\n        borderBottom: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '30px'\n      }\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }),\n);\n","import React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  // ButtonGroup,\n  Checkbox,\n  Container,\n  FormControlLabel,\n  Grid,\n  Paper,\n  Snackbar,\n  TextField,\n  // Tooltip,\n  Typography\n} from '@material-ui/core';\nimport GoalModel from '../../../models/goal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ERROR } from '../../../constants/actionTypes';\nimport Alert from '../../Helpers/Alert';\nimport { useHistory } from 'react-router-dom';\nimport { createGoal } from '../../../actions/goals';\nimport useStyles from './styles';\n\nconst AddGoal = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { error } = useSelector((state: any) => state.error);\n  const [showError, setShowError] = useState(false);\n\n  const [goalTitle, setGoalTitle] = useState('');\n  const [goalDescription, setGoalDescription] = useState('');\n  const [goalCadence, setGoalCadence] = useState('');\n  const [goalComplete, setGoalComplete] = useState(false);\n\n  const profile = localStorage.getItem('profile')!;\n  const [\n    user, \n    // setUser\n  ] = useState(JSON.parse(profile));\n\n  useEffect(() => {\n    if (error) {\n      setShowError(true);\n    }\n  }, [error]);\n\n  const handleSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    const { result } = user;\n    const { googleId } = result;\n\n    const goal = new GoalModel();\n\n    goal.title = goalTitle.trim();\n    goal.description = goalDescription.trim();\n    goal.cadence = goalCadence;\n    goal.complete = goalComplete;\n    goal.userId = googleId || result._id;\n\n    const goalResult = validateGoal(goal);\n    if (!goalResult.ok) {\n      return dispatch({ type: ERROR, data: { error: goalResult.error } });\n    }\n\n    dispatch(createGoal(goal, history));\n  };\n\n  const validateGoal = (goal: GoalModel) => {\n    if (goal.title.trim().length === 0) {\n      return { ok: false, error: \"No goal title\" };\n    }\n    if (goal.description.trim().length === 0) {\n      return { ok: false, error: \"No goal description\" };\n    }\n    return { ok: true };\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    dispatch({ type: ERROR, data: null });\n    setShowError(false);\n  };\n\n  return (\n    <Container component=\"main\" style={{ marginTop: \"100px\" }}>\n      <form onSubmit={handleSubmit}>\n        <Paper className={classes.paper} elevation={6}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} sm={10}>\n              <Typography component=\"h2\" variant=\"h5\" align=\"center\" gutterBottom>Add Goal</Typography>\n              <TextField\n                onChange={(e) => { setGoalTitle(e.target.value); }}\n                value={goalTitle}\n                label=\"Goal Name\"\n                placeholder=\"Enter goal Name\"\n                fullWidth\n              />\n              <TextField\n                onChange={(e) => { setGoalDescription(e.target.value); }}\n                label=\"Goal Description\"\n                value={goalDescription}\n                placeholder=\"Enter goal description\"\n                fullWidth\n              />\n              <TextField\n                onChange={(e) => { setGoalCadence(e.target.value); }}\n                label=\"Goal Cadence\"\n                value={goalCadence}\n                placeholder=\"Enter goal cadence\"\n                fullWidth\n              />\n              <FormControlLabel\n                label=\"Complete?\"\n                control={\n                  <Checkbox\n                    onChange={(e) => { setGoalComplete(!goalComplete); }}\n                    value={goalComplete}\n                    placeholder=\"Goal complete?\"\n                  />\n                }\n              />\n              <Grid item xs={12} sm={2} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                <Button type=\"submit\">Submit</Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n      </form>\n      <Snackbar open={showError} autoHideDuration={6000} onClose={handleClose}>\n        <Alert\n          onClose={handleClose}\n          severity=\"warning\"\n          className={classes.alert}\n        >\n          {error}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n\nexport default AddGoal;\n","import {\n  CREATE,\n  DELETE,\n  DELETE_SUCCESSFUL,\n  END_LOADING,\n  ERROR,\n  FETCH_ALL,\n  FETCH_GOAL,\n  FETCH_GOALS,\n  START_LOADING,\n  UPDATE,\n  UPDATE_SUCCESSFUL\n} from \"../constants/actionTypes\";\nimport * as api from '../api';\n\nexport const getAllGoals = () => async (dispatch: any) => {\n\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchAllGoals();\n    dispatch({ type: FETCH_ALL, payload: { data } });\n    dispatch({ type: END_LOADING });\n  }\n  catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getUserGoals = (userId: String) => async (dispatch: any) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchUserGoals(userId);\n\n    dispatch({ type: FETCH_GOALS, payload: { data } });\n    dispatch({ type: END_LOADING });\n  }\n  catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getGoal = (id: any) => async (dispatch: any) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.fetchGoal(id);\n\n    dispatch({ type: FETCH_GOAL, payload: { goal: data } });\n    dispatch({ type: END_LOADING });\n  }\n  catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createGoal = (goal: any, history: any) => async (dispatch: any) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const { data } = await api.createGoal(goal);\n\n    if (data?.error) {\n      dispatch({ type: ERROR, data });\n      return history.push('/addGoal');\n    }\n\n    dispatch({ type: END_LOADING });\n    dispatch({ type: CREATE, payload: data });\n    history.push(`/`);\n  }\n  catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateGoal = (goal: any, history: any) => async (dispatch: any) => {\n\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.updateGoal(goal._id, goal);\n\n    if (data?.error) {\n      dispatch({ type: ERROR, data });\n      return history.push(`/editGoal/${goal._id}`);\n    }\n\n    dispatch({ type: UPDATE, payload: data });\n    dispatch({ type: UPDATE_SUCCESSFUL, payload: true });\n    dispatch({ type: END_LOADING });\n    return history.push(`/goals`);\n\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteGoal = (id: String, history: any) => async (dispatch: any) => {\n\n  try {\n    dispatch({ type: START_LOADING });\n    await api.deleteGoal(id);\n\n    dispatch({ type: DELETE, payload: id });\n    dispatch({ type: DELETE_SUCCESSFUL, payload: true });\n    dispatch({ type: END_LOADING });\n    return history.push(`/`);\n\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n\n    },\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: theme.spacing(2),\n    },\n    icon: {\n      margin: theme.spacing(1),\n    },\n\n    alert: {\n      backgroundColor: '#f50057',\n    },\n    loadingPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: '20px',\n      borderRadius: '15px',\n      height: '39vh',\n      marginTop: '1rem'\n    },\n    underline: {\n      '&::after': {\n        border: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '30px'\n      },\n      '&::before': {\n        borderBottom: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '30px'\n      }\n    },\n    underlineLinear: {\n      '&::after': {\n        border: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '20px'\n      },\n      '&::before': {\n        borderBottom: '2px solid #3f51b5',\n        width: '300px',\n        marginLeft: '20px'\n      }\n    },\n    typographyLinear: {\n      maxWidth: '150px',\n      paddingTop: '30px'\n    },\n    singleChoiceOption: {\n      fontSize: '13px',\n      color: '#3f51b5',\n      '&:hover': {\n        cursor: \"pointer\"\n      }\n    },\n    singleChoiceButtonsContainer: {\n      marginTop: '20px',\n      display: 'flex',\n      justifyContent: 'space-around',\n      alignItems: 'center'\n    },\n\n    singleChoiceOptionMargin: {\n      marginLeft: '140px',\n      '&:hover': {\n        cursor: \"pointer\"\n      }\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }),\n);\n","import React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  CircularProgress,\n  Container,\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  Paper,\n  Snackbar,\n  TextField,\n  // Tooltip,\n  Typography\n} from '@material-ui/core';\nimport useStyles from './styles';\nimport GoalModel from '../../../models/goal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ERROR } from '../../../constants/actionTypes';\nimport Alert from '../../Helpers/Alert';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { getGoal, updateGoal } from '../../../actions/goals';\n\nexport const EditGoal = () => {\n  const { id } = useParams<any>();\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { goal, isLoading } = useSelector((state: any) => state.goals);\n  const { error } = useSelector((state: any) => state.error);\n  const [showError, setShowError] = useState(false);\n  const [goalTitle, setGoalTitle] = useState(goal?.title);\n  const [goalDescription, setGoalDescription] = useState('');\n  const [goalCadence, setGoalCadence] = useState('Daily');\n  const [goalComplete, setGoalComplete] = useState(false);\n  const profile = localStorage.getItem('profile')!;\n  const [\n    user, \n    // setUser\n  ] = useState(JSON.parse(profile));\n\n  useEffect(() => {\n    if (error) {\n      setShowError(true);\n    }\n  }, [error]);\n\n  useEffect(() => {\n    dispatch(getGoal(id));\n  }, [id]);\n\n  useEffect(() => {\n    if (goal) {\n      setGoalTitle(goal.title);\n      setGoalDescription(goal.description);\n      setGoalCadence(goal.cadence);\n      setGoalComplete(goal.complete);\n    }\n  }, [goal]);\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    dispatch({ type: ERROR, data: null });\n    setShowError(false);\n  };\n\n  const handleSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    const goal = new GoalModel();\n\n    goal.title = goalTitle.trim();\n    goal.description = goalDescription.trim();\n    goal.cadence = goalCadence;\n    goal.complete = goalComplete;\n    goal.userId = user.result._id;\n    goal._id = id;\n\n    const goalResult = validateGoal(goal);\n    if (!goalResult.ok) {\n      return dispatch({ type: ERROR, data: { error: goalResult.error } });\n    }\n\n    dispatch(updateGoal(goal, history));\n  };\n\n  const validateGoal = (goal: GoalModel) => {\n    if (goal.title.trim().length === 0) {\n      return { ok: false, error: \"No goal name\" };\n    }\n    if (goal.description.trim().length === 0) {\n      return { ok: false, error: \"No goal description\" };\n    }\n    return { ok: true };\n  };\n\n\n  if (isLoading) {\n    return (\n      <Container component=\"main\" style={{ marginTop: \"100px\" }}>\n        <Paper\n          elevation={6}\n          className={classes.loadingPaper}\n          style={{ marginTop: \"80px\" }}\n        >\n          <CircularProgress size=\"7em\" color=\"secondary\" />\n        </Paper>\n      </Container>\n    );\n  }\n\n  return (\n    <Container component=\"main\" style={{ marginTop: \"100px\" }}>\n      <form onSubmit={handleSubmit}>\n        <Paper className={classes.paper} elevation={6}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} sm={10} alignItems=\"center\">\n              <Typography\n                component=\"h2\"\n                variant=\"h5\"\n                align=\"center\"\n                gutterBottom\n              >\n                Edit Goal\n              </Typography>\n              <TextField\n                onChange={(e) => { setGoalTitle(e.target.value); }}\n                value={goalTitle}\n                placeholder=\"Goal name\"\n                fullWidth\n              />\n              <TextField\n                onChange={(e) => { setGoalDescription(e.target.value); }}\n                value={goalDescription}\n                placeholder=\"Goal description\"\n                fullWidth\n              />\n              <TextField\n                onChange={(e) => { setGoalCadence(e.target.value); }}\n                label=\"Goal Cadence\"\n                value={goalCadence}\n                placeholder=\"Enter goal cadence\"\n                fullWidth\n              />\n              <FormControlLabel\n                label=\"Complete?\"\n                control={\n                  <Checkbox\n                    onChange={(e) => { setGoalComplete(!goalComplete); }}\n                    value={goalComplete}\n                    placeholder=\"Goal complete?\"\n                  />\n                }\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          type=\"submit\"\n        >\n          Save goal\n        </Button>\n      </form>\n      <Snackbar open={showError} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"warning\" className={classes.alert}>{error}</Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n\nexport default EditGoal;\n","import React from 'react';\n\nconst Dashboard = () => {\n  return (\n    <div>Dashboard</div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      height: '250px'\n    },\n    loadingPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: '20px',\n      borderRadius: '4px',\n      height: '75vh',\n      width: '100%',\n      marginTop: '20px'\n    },\n    title: {\n      fontSize: 14,\n    },\n  }),\n);\n","import React, { useEffect, useState } from 'react';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  Typography\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport useStyles from './styles';\nimport GoalModel from '../../models/goal';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\nimport { deleteGoal } from '../../actions/goals';\nimport { useDispatch } from 'react-redux';\n\ninterface props {\n  goal: GoalModel;\n}\n\nconst Goal = (props: props) => {\n  const { goal } = props;\n  const {\n    title,\n    description,\n    cadence,\n    complete,\n    userId: goalUserID,\n  } = goal;\n\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const profile = localStorage.getItem('profile')!;\n  const loggedUser = JSON.parse(profile);\n  const { result } = loggedUser || { result: {} };\n  const { googleId, _id } = result || { googleId: {}, _id: {} };\n  const userID = googleId || _id;\n\n  console.log(\"UserID: \", userID);\n\n  return (\n    <Grid item xs={12} md={6} lg={3} style={{ marginTop: \"10px\" }}>\n      <Card className={classes.root} raised>\n        <CardContent>\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n            component=\"h2\"\n            noWrap\n          >\n            {title}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"p\"\n            gutterBottom\n            noWrap\n          >\n            Description: {description}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"p\"\n            gutterBottom\n            noWrap\n          >\n            Cadence: {cadence}\n          </Typography>\n          <FormControlLabel\n            label=\"Complete?\"\n            control={\n              <Checkbox\n                disabled\n                value={complete}\n                placeholder=\"Goal complete?\"\n              />\n            }\n          />\n        </CardContent>\n        <CardActions>\n          {loggedUser && Object.keys(loggedUser).length !== 0 && userID === goalUserID &&\n            <>\n              <IconButton\n                title=\"Edit goal\"\n                aria-label=\"edit goal\"\n                onClick={() => history.push(`/editGoal/${props.goal._id}`)}\n              >\n                <EditRoundedIcon fontSize=\"large\" color=\"secondary\" />\n              </IconButton>\n              <IconButton\n                title=\"Delete goal\"\n                aria-label=\"delete goal\"\n                onClick={() => dispatch(deleteGoal(props.goal._id, history))}\n              >\n                <DeleteIcon fontSize=\"large\" color=\"secondary\" />\n              </IconButton>\n            </>\n          }\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default Goal;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Grid,\n  CircularProgress,\n  Grow,\n  Paper,\n  Button,\n  Container,\n  Snackbar\n} from '@material-ui/core';\nimport useStyles from './styles';\nimport { useHistory } from 'react-router';\nimport { getAllGoals, getUserGoals } from '../../actions/goals';\nimport GoalModel from '../../models/goal';\nimport Goal from './Goal';\nimport { DELETE_SUCCESSFUL, UPDATE_SUCCESSFUL } from '../../constants/actionTypes';\nimport Alert from '../Helpers/Alert';\n\nconst Goals = () => {\n  const {\n    goals,\n    isLoading,\n    updateSuccessful,\n    deleteSuccessful\n  } = useSelector((state: any) => state.goals);\n\n  const { addAnswerSuccessful } = useSelector((state: any) => state.answers);\n  const history = useHistory();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const profile = localStorage.getItem('profile')!;\n\n  const [showEditSuccess, setShowEditSuccess] = useState(false);\n  const [showDeleteSuccess, setShowDeleteSuccess] = useState(false);\n  const [showAddAnswerSuccess, setShowAddAnswerSuccess] = useState(false);\n  const [user, setUser] = useState(JSON.parse(profile));\n\n  useEffect(() => {\n    if (updateSuccessful) {\n      setShowEditSuccess(true);\n    }\n  }, [updateSuccessful]);\n\n  useEffect(() => {\n    if (deleteSuccessful) {\n      setShowDeleteSuccess(deleteSuccessful);\n    }\n  }, [deleteSuccessful]);\n\n\n  useEffect(() => {\n    if (addAnswerSuccessful) {\n      setShowAddAnswerSuccess(addAnswerSuccessful);\n    }\n  }, [addAnswerSuccessful]);\n\n  // useEffect(() => {\n  //   dispatch(getAllGoals());\n  // }, [dispatch]);\n\n  useEffect(() => {\n    const { result } = user || { user: {} };\n    console.log(\"Result: \", result);\n\n    const userId = result?.googleId || result?._id;\n\n    console.log(\"UserID: \", userId);\n\n    dispatch(getUserGoals(userId));\n  }, [dispatch]);\n\n  const handleCloseEditSuccess = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    dispatch({ type: UPDATE_SUCCESSFUL, payload: false });\n    setShowEditSuccess(false);\n  };\n\n  const handleCloseDeleteSuccess = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    dispatch({ type: DELETE_SUCCESSFUL, payload: false });\n    setShowDeleteSuccess(false);\n  };\n\n  return (\n    <Container style={{ marginTop: \"100px\" }}>\n      {user?.result &&\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => history.push(\"/addGoal\")}\n        >\n          Add goal\n        </Button>\n      }\n      {isLoading ?\n        <Paper elevation={6} className={classes.loadingPaper}>\n          <CircularProgress size=\"7em\" color=\"primary\" value={100} />\n        </Paper>\n        :\n        <Grow in={true} timeout={{ enter: 1500 }}>\n          <Grid container spacing={3}>\n            {\n              goals?.map((goal: GoalModel, index: number) => (\n                <Goal goal={goal} key={index} />\n              ))\n            }\n          </Grid>\n        </Grow>\n      }\n      <Snackbar\n        open={showEditSuccess}\n        autoHideDuration={6000}\n        onClose={handleCloseEditSuccess}\n      >\n        <Alert\n          onClose={handleCloseEditSuccess}\n          severity=\"success\"\n        >\n          Edit successful\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        open={showDeleteSuccess}\n        autoHideDuration={6000}\n        onClose={handleCloseDeleteSuccess}\n      >\n        <Alert\n          onClose={handleCloseDeleteSuccess}\n          severity=\"success\"\n        >\n          Delete successful\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n\nexport default Goals;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport LoginUser from '../Auth/LoginUser';\nimport Unauthorized from '../Unauthorized/Unauthorized';\nimport RegisterUser from '../Auth/RegisterUser';\nimport Forms from '../Forms/Forms';\nimport AddForm from '../Forms/AddForm/AddForm';\nimport EditForm from '../Forms/EditForm/EditForm';\nimport AnswerForm from '../Forms/AnswerForm/AnswerForm';\nimport ShowAnswers from '../Forms/ShowAnswers/ShowAnswers';\n\nimport AddGoal from '../Goals/AddGoal/AddGoal';\nimport EditGoal from '../Goals/EditGoal/EditGoal';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Goals from '../Goals/Goals';\n\nconst Router = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={() => <Redirect to=\"/goals\" />} />\n      <Route path=\"/dashboard\" exact component={Dashboard} />\n      <Route path=\"/addGoal\" exact component={AddGoal} />\n      <Route path=\"/editGoal/:id\" exact component={EditGoal} />\n      <Route path=\"/goals\" exact component={Goals} />\n\n      <Route path=\"/forms\" exact component={Forms} />\n      <Route path=\"/loginUser\" exact component={LoginUser} />\n      <Route path=\"/register\" exact component={RegisterUser} />\n      <Route path=\"/addForm\" exact component={AddForm} />\n      <Route path=\"/editForm/:id\" exact component={EditForm} />\n      <Route path=\"/answerForm/:id\" exact component={AnswerForm} />\n      <Route path=\"/showAnswers/:id\" exact component={ShowAnswers} />\n      <Route path=\"/unauthorized\" exact component={Unauthorized} />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createTheme } from '@material-ui/core/styles';\nimport Layout from \"./Layout\";\nimport Router from \"../Router/Router\";\n\nconst theme = createTheme({\n  typography: {\n    \"fontFamily\": `\"Open Sans\", sans-serif`,\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 700\n  },\n  palette: {\n    primary: {\n      main: \"#8316e2\",\n    },\n    secondary: {\n      main: \"#75e216\",\n    },\n    warning: {\n      main: \"#e21675\"\n    }\n  },\n});\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <Layout>\n          <Router />\n        </Layout>\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport { reducers } from './reducers';\nimport App from './components/App/App';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}